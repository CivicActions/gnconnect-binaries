{"version":3,"sources":["webpack:///./node_modules/mattermost-redux/selectors/entities/admin.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/mattermost-redux/actions/schemes.js","webpack:///./node_modules/mattermost-redux/selectors/entities/schemes.js","webpack:///./node_modules/mattermost-redux/actions/jobs.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/mattermost-redux/selectors/entities/jobs.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/color-convert/index.js","webpack:///./node_modules/color-convert/conversions.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/mattermost-redux/constants/schemes.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chart.js/src/elements/index.js"],"names":["Object","defineProperty","exports","value","getLogs","state","entities","admin","logs","getAudits","audits","getConfig","config","getEnvironmentConfig","environmentConfig","getComplianceReports","complianceReports","getClusterInfo","clusterInfo","getUserAccessTokens","userAccessTokens","helpers","__webpack_require__","filterByPosition","array","position","where","v","sortByWeight","reverse","forEach","i","_tmpIndex_","sort","a","b","v0","v1","weight","module","defaults","addBox","chart","item","boxes","fullWidth","push","removeBox","layoutItem","index","indexOf","splice","configure","options","prop","props","ilen","length","hasOwnProperty","update","width","height","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","each","concat","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","formatters","values","isArray","linear","tickValue","ticks","delta","abs","floor","logDelta","log10","tickString","numDecimal","min","toFixed","logarithmic","remain","pow","toExponential","noop","uid","id","isNullOrUndef","Array","prototype","toString","call","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","args","thisArg","apply","loopable","len","keys","arrayEquals","a0","a1","clone","source","map","target","klen","k","_merger","key","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","arguments","inherits","extensions","me","this","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","getScheme","schemeId","_helpers","bindClientFunc","_client","Client4","_action_types","SchemeTypes","GET_SCHEME_REQUEST","RECEIVED_SCHEME","GET_SCHEME_SUCCESS","GET_SCHEME_FAILURE","getSchemes","scope","page","undefined","perPage","_constants","General","PAGE_SIZE_DEFAULT","GET_SCHEMES_REQUEST","RECEIVED_SCHEMES","GET_SCHEMES_SUCCESS","GET_SCHEMES_FAILURE","createScheme","scheme","CREATE_SCHEME_REQUEST","CREATED_SCHEME","CREATE_SCHEME_SUCCESS","CREATE_SCHEME_FAILURE","deleteScheme","_this","_ref","gen","Promise","resolve","reject","step","arg","info","error","done","then","err","_asyncToGenerator","regeneratorRuntime","mark","_callee","dispatch","getState","data","wrap","_context","prev","next","type","DELETE_SCHEME_REQUEST","sent","t0","forceLogoutIfNecessary","_reduxBatchedActions","batchActions","DELETE_SCHEME_FAILURE","_errors","logError","abrupt","DELETED_SCHEME","DELETE_SCHEME_SUCCESS","stop","_x3","_x4","patchScheme","PATCH_SCHEME_REQUEST","PATCHED_SCHEME","PATCH_SCHEME_SUCCESS","PATCH_SCHEME_FAILURE","getSchemeTeams","GET_SCHEME_TEAMS_REQUEST","RECEIVED_SCHEME_TEAMS","GET_SCHEME_TEAMS_SUCCESS","GET_SCHEME_TEAMS_FAILURE","getSchemeChannels","GET_SCHEME_CHANNELS_REQUEST","RECEIVED_SCHEME_CHANNELS","GET_SCHEME_CHANNELS_SUCCESS","GET_SCHEME_CHANNELS_FAILURE","_slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","_s","_i","sliceIterator","TypeError","makeGetSchemeChannels","_reselect","createSelector","_channels","getAllChannels","allChannels","_schemes","ScopeTypes","TEAM","msg","console","warn","schemeChannels","entries","_item","channel","scheme_id","makeGetSchemeTeams","_teams","getTeams","allTeams","CHANNEL","schemeTeams","_item2","team","schemes","createJob","job","JobTypes","CREATE_JOB_REQUEST","RECEIVED_JOB","CREATE_JOB_SUCCESS","CREATE_JOB_FAILURE","getJob","GET_JOB_REQUEST","GET_JOB_SUCCESS","GET_JOB_FAILURE","getJobs","JOBS_CHUNK_SIZE","GET_JOBS_REQUEST","RECEIVED_JOBS","GET_JOBS_SUCCESS","GET_JOBS_FAILURE","getJobsByType","RECEIVED_JOBS_BY_TYPE","cancelJob","CANCEL_JOB_REQUEST","CANCEL_JOB_SUCCESS","CANCEL_JOB_FAILURE","Chart","Element","elements","Interaction","layouts","platform","plugins","Ticks","register","initialize","window","Legend","legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","canvas","layoutService","convert","string","Color","obj","valid","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","p","w1","w2","toJSON","result","slice","spaces","maxes","getValues","space","charAt","capped","chans","round","sname","svalues","getRelativePosition","e","native","x","y","parseVisibleItems","handler","meta","j","jlen","datasets","isDatasetVisible","getDatasetMeta","element","_view","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","label","_datasetIndex","x-axis","point","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_set","_plugins","_cacheId","plugin","unregister","idx","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","opts","global","_invalidate","getAllJobs","jobs","makeGetJobsByType","jobsByType","jobsByTypeList","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","mode","animationDuration","onClick","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","ctx","clearRect","roundedRect","radius","rx","ry","moveTo","lineTo","quadraticCurveTo","rect","drawPoint","style","edgeLength","xOffset","yOffset","size","isNaN","beginPath","arc","closePath","fill","SQRT2","fillRect","strokeRect","offset","leftX","topY","sideSize","stroke","drawImage","clipArea","area","save","clip","unclipArea","restore","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","toLineHeight","matches","match","inputs","context","color","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","view","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","scaleService","getScaleDefaults","scale","slen","collection","filterCallback","filter","filtered","findIndex","arrayToSearch","startIndex","currentItem","findPreviousWhere","isNumber","n","parseFloat","isFinite","almostEquals","epsilon","almostWhole","rounded","reduce","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","aliasPixel","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","model","_model","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","getMaximumWidth","container","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","func","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","str","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","backgroundColor","borderColor","borderWidth","inLabelRange","vm","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","tooltipPosition","centreAngle","rangeFromCentre","draw","_chart","sA","eA","strokeStyle","lineWidth","fillStyle","lineJoin","globalDefaults","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","x1","x2","y1","halfWidth","base","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","get","passive","listener","createEvent","nativeEvent","addResizeListener","expando","resizer","createElement","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","display","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","animation","duration","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","startDigest","startTime","Date","now","framesToDrop","advance","endTime","set","positionIsHorizontal","types","instances","controllers","labels","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scales","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","Error","resetElements","reset","tooltip","newOptions","_options","tooltips","updateConfig","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","transition","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","hidden","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","destroy","unbindEvents","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","enabled","changed","handleEvent","_start","bufferedRequest","hoverOptions","active","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","configurable","enumerable","res","object","listenArrayEvents","resyncElements","removeHoverStyle","elementOpts","custom","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","start","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","labelsFromTicks","getLineValue","offsetGridLines","lineValue","getPixelForTick","gridLines","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","computeTextSize","tick","parseFontOptions","fontSize","family","parseLineHeight","Scale","getTicks","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","body","dataPoints","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","pivot","average","hasValue","eventPosition","nearestElement","d","tp","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","ceil","numSpaces","precision","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate","table","skey","tkey","mid","i0","i1","lo","lookup","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","factor","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","Rectangle","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","dataPoint","bubble","Point","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","lineEnabled","showLine","Line","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","countVisibleElements","visibleCount","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","Bar","Bubble","Doughnut","PolarArea","Radar","Scatter","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","configuration","ease","actual","origin","c0","c1"],"mappings":"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","file":"32.37c26593b68040a9c12d.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getLogs = getLogs;\nexports.getAudits = getAudits;\nexports.getConfig = getConfig;\nexports.getEnvironmentConfig = getEnvironmentConfig;\nexports.getComplianceReports = getComplianceReports;\nexports.getClusterInfo = getClusterInfo;\nexports.getUserAccessTokens = getUserAccessTokens;\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nfunction getLogs(state) {\n    return state.entities.admin.logs;\n}\n\nfunction getAudits(state) {\n    return state.entities.admin.audits;\n}\n\nfunction getConfig(state) {\n    return state.entities.admin.config;\n}\n\nfunction getEnvironmentConfig(state) {\n    return state.entities.admin.environmentConfig;\n}\n\nfunction getComplianceReports(state) {\n    return state.entities.admin.complianceReports;\n}\n\nfunction getClusterInfo(state) {\n    return state.entities.admin.clusterInfo;\n}\n\nfunction getUserAccessTokens(state) {\n    return state.entities.admin.userAccessTokens;\n}","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getScheme = getScheme;\nexports.getSchemes = getSchemes;\nexports.createScheme = createScheme;\nexports.deleteScheme = deleteScheme;\nexports.patchScheme = patchScheme;\nexports.getSchemeTeams = getSchemeTeams;\nexports.getSchemeChannels = getSchemeChannels;\n\nvar _client = require('../client');\n\nvar _action_types = require('../action_types');\n\nvar _constants = require('../constants');\n\nvar _reduxBatchedActions = require('redux-batched-actions');\n\nvar _helpers = require('./helpers');\n\nvar _errors = require('./errors');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n\nfunction getScheme(schemeId) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.getScheme, _action_types.SchemeTypes.GET_SCHEME_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEME, _action_types.SchemeTypes.GET_SCHEME_SUCCESS], _action_types.SchemeTypes.GET_SCHEME_FAILURE, schemeId);\n}\n\nfunction getSchemes(scope) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getSchemes, _action_types.SchemeTypes.GET_SCHEMES_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEMES, _action_types.SchemeTypes.GET_SCHEMES_SUCCESS], _action_types.SchemeTypes.GET_SCHEMES_FAILURE, scope, page, perPage);\n}\n\nfunction createScheme(scheme) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.createScheme, _action_types.SchemeTypes.CREATE_SCHEME_REQUEST, [_action_types.SchemeTypes.CREATED_SCHEME, _action_types.SchemeTypes.CREATE_SCHEME_SUCCESS], _action_types.SchemeTypes.CREATE_SCHEME_FAILURE, scheme);\n}\n\nfunction deleteScheme(schemeId) {\n    var _this = this;\n\n    return function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {\n            var data;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            dispatch({ type: _action_types.SchemeTypes.DELETE_SCHEME_REQUEST, data: null }, getState);\n\n                            data = null;\n                            _context.prev = 2;\n                            _context.next = 5;\n                            return _client.Client4.deleteScheme(schemeId);\n\n                        case 5:\n                            data = _context.sent;\n                            _context.next = 13;\n                            break;\n\n                        case 8:\n                            _context.prev = 8;\n                            _context.t0 = _context['catch'](2);\n\n                            (0, _helpers.forceLogoutIfNecessary)(_context.t0, dispatch, getState);\n                            dispatch((0, _reduxBatchedActions.batchActions)([{ type: _action_types.SchemeTypes.DELETE_SCHEME_FAILURE, error: _context.t0 }, (0, _errors.logError)(_context.t0)(dispatch)]), getState);\n                            return _context.abrupt('return', { error: _context.t0 });\n\n                        case 13:\n\n                            dispatch({ type: _action_types.SchemeTypes.DELETED_SCHEME, data: { schemeId: schemeId } }, getState);\n                            dispatch({ type: _action_types.SchemeTypes.DELETE_SCHEME_SUCCESS, data: null }, getState);\n\n                            return _context.abrupt('return', { data: data });\n\n                        case 16:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, _this, [[2, 8]]);\n        }));\n\n        return function (_x3, _x4) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n}\n\nfunction patchScheme(schemeId, scheme) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.patchScheme, _action_types.SchemeTypes.PATCH_SCHEME_REQUEST, [_action_types.SchemeTypes.PATCHED_SCHEME, _action_types.SchemeTypes.PATCH_SCHEME_SUCCESS], _action_types.SchemeTypes.PATCH_SCHEME_FAILURE, schemeId, scheme);\n}\n\nfunction getSchemeTeams(schemeId) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getSchemeTeams, _action_types.SchemeTypes.GET_SCHEME_TEAMS_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEME_TEAMS, _action_types.SchemeTypes.GET_SCHEME_TEAMS_SUCCESS], _action_types.SchemeTypes.GET_SCHEME_TEAMS_FAILURE, schemeId, page, perPage);\n}\n\nfunction getSchemeChannels(schemeId) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getSchemeChannels, _action_types.SchemeTypes.GET_SCHEME_CHANNELS_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEME_CHANNELS, _action_types.SchemeTypes.GET_SCHEME_CHANNELS_SUCCESS], _action_types.SchemeTypes.GET_SCHEME_CHANNELS_FAILURE, schemeId, page, perPage);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n\nexports.getSchemes = getSchemes;\nexports.getScheme = getScheme;\nexports.makeGetSchemeChannels = makeGetSchemeChannels;\nexports.makeGetSchemeTeams = makeGetSchemeTeams;\n\nvar _reselect = require('reselect');\n\nvar _channels = require('./channels');\n\nvar _teams = require('./teams');\n\nvar _schemes = require('../../constants/schemes');\n\nfunction getSchemes(state) {\n    return state.entities.schemes.schemes;\n}\n\nfunction getScheme(state, id) {\n    var schemes = getSchemes(state);\n    return schemes[id];\n}\n\nfunction makeGetSchemeChannels() {\n    return (0, _reselect.createSelector)(_channels.getAllChannels, function (state, props) {\n        return getScheme(state, props.schemeId);\n    }, function (allChannels, scheme) {\n        if (!scheme) {\n            return [];\n        }\n\n        if (scheme.scope === _schemes.ScopeTypes.TEAM) {\n            var msg = 'Not implemented: scheme \\'' + scheme.id + '\\' is team-scope but \\'getSchemeChannels\\' only accepts channel-scoped schemes.';\n            console.warn(msg); // eslint-disable-line no-console\n            return [];\n        }\n\n        var schemeChannels = [];\n\n        // $FlowFixMe\n        Object.entries(allChannels).forEach(function (item) {\n            var _item = _slicedToArray(item, 2),\n                channel = _item[1];\n\n            if (channel.scheme_id === scheme.id) {\n                schemeChannels.push(channel);\n            }\n        });\n\n        return schemeChannels;\n    });\n}\n\nfunction makeGetSchemeTeams() {\n    return (0, _reselect.createSelector)(_teams.getTeams, function (state, props) {\n        return getScheme(state, props.schemeId);\n    }, function (allTeams, scheme) {\n        if (!scheme) {\n            return [];\n        }\n\n        if (scheme.scope === _schemes.ScopeTypes.CHANNEL) {\n            var msg = 'Error: scheme \\'' + scheme.id + '\\' is channel-scoped but \\'getSchemeChannels\\' only accepts team-scoped schemes.';\n            console.warn(msg); // eslint-disable-line no-console\n            return [];\n        }\n\n        var schemeTeams = [];\n\n        // $FlowFixMe\n        Object.entries(allTeams).forEach(function (item) {\n            var _item2 = _slicedToArray(item, 2),\n                team = _item2[1];\n\n            if (team.scheme_id === scheme.id) {\n                schemeTeams.push(team);\n            }\n        });\n\n        return schemeTeams;\n    });\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createJob = createJob;\nexports.getJob = getJob;\nexports.getJobs = getJobs;\nexports.getJobsByType = getJobsByType;\nexports.cancelJob = cancelJob;\n\nvar _action_types = require('../action_types');\n\nvar _client = require('../client');\n\nvar _constants = require('../constants');\n\nvar _helpers = require('./helpers');\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction createJob(job) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.createJob, _action_types.JobTypes.CREATE_JOB_REQUEST, [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.CREATE_JOB_SUCCESS], _action_types.JobTypes.CREATE_JOB_FAILURE, job);\n}\n\nfunction getJob(id) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.getJob, _action_types.JobTypes.GET_JOB_REQUEST, [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.GET_JOB_SUCCESS], _action_types.JobTypes.GET_JOB_FAILURE, id);\n}\n\nfunction getJobs() {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.General.JOBS_CHUNK_SIZE;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getJobs, _action_types.JobTypes.GET_JOBS_REQUEST, [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.GET_JOBS_SUCCESS], _action_types.JobTypes.GET_JOBS_FAILURE, page, perPage);\n}\n\nfunction getJobsByType(type) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.JOBS_CHUNK_SIZE;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getJobsByType, _action_types.JobTypes.GET_JOBS_REQUEST, [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.RECEIVED_JOBS_BY_TYPE, _action_types.JobTypes.GET_JOBS_SUCCESS], _action_types.JobTypes.GET_JOBS_FAILURE, type, page, perPage);\n}\n\nfunction cancelJob(job) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.cancelJob, _action_types.JobTypes.CANCEL_JOB_REQUEST, _action_types.JobTypes.CANCEL_JOB_SUCCESS, _action_types.JobTypes.CANCEL_JOB_FAILURE, job);\n}","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getAllJobs = getAllJobs;\nexports.getJobsByType = getJobsByType;\nexports.makeGetJobsByType = makeGetJobsByType;\n\nvar _reselect = require('reselect');\n\nfunction getAllJobs(state) {\n    return state.entities.jobs.jobs;\n} // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n\nfunction getJobsByType(state) {\n    return state.entities.jobs.jobsByTypeList;\n}\n\nfunction makeGetJobsByType(type) {\n    return (0, _reselect.createSelector)(getJobsByType, function (jobsByType) {\n        return jobsByType[type] || [];\n    });\n}","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nvar ScopeTypes = exports.ScopeTypes = {\n    TEAM: 'team',\n    CHANNEL: 'channel'\n};","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n"],"sourceRoot":""}