{"version":3,"sources":["webpack:///./components/authorize.jsx"],"names":["__webpack_require__","_reactIntl","_admin_actions","_browser_history","Authorize","props","_classCallCheck3","default","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","handleAllow","bind","handleDeny","state","location","PropTypes","object","isRequired","params","_this2","clientId","URLSearchParams","search","get","test","getOAuthAppInfo","app","setState","blocker","document","getElementById","parentNode","removeChild","_this3","allowOAuth2","data","redirect","browserHistory","push","err","error","message","redirectUri","startsWith","replace","icon","icon_url","icon50","_react2","createElement","className","_form_error2","src","width","height","alt","FormattedHTMLMessage","id","defaultMessage","values","appName","name","type","onClick","FormattedMessage","React","Component"],"mappings":"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","file":"11.13c6cff74fc0a702246b.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\n\nimport {allowOAuth2, getOAuthAppInfo} from 'actions/admin_actions.jsx';\nimport icon50 from 'images/icon50x50.png';\nimport FormError from 'components/form_error.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nexport default class Authorize extends React.Component {\n    static get propTypes() {\n        return {\n            location: PropTypes.object.isRequired,\n            params: PropTypes.object.isRequired,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleAllow = this.handleAllow.bind(this);\n        this.handleDeny = this.handleDeny.bind(this);\n\n        this.state = {};\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        const clientId = (new URLSearchParams(this.props.location.search)).get('client_id');\n        if (!(/^[a-z0-9]+$/.test(clientId))) {\n            return;\n        }\n\n        getOAuthAppInfo(\n            clientId,\n            (app) => {\n                this.setState({app});\n            }\n        );\n    }\n\n    componentDidMount() {\n        // if we get to this point remove the antiClickjack blocker\n        const blocker = document.getElementById('antiClickjack');\n        if (blocker) {\n            blocker.parentNode.removeChild(blocker);\n        }\n    }\n\n    handleAllow() {\n        const params = new URLSearchParams(this.props.location.search);\n\n        allowOAuth2(params,\n            (data) => {\n                if (data.redirect) {\n                    browserHistory.push(data.redirect);\n                }\n            },\n            (err) => {\n                this.setState({error: err.message});\n            }\n        );\n    }\n\n    handleDeny() {\n        const redirectUri = (new URLSearchParams(this.props.location.search)).get('redirect_uri');\n        if (redirectUri.startsWith('https://') || redirectUri.startsWith('http://')) {\n            browserHistory.replace(redirectUri + '?error=access_denied');\n            return;\n        }\n\n        browserHistory.replace('/error');\n    }\n\n    render() {\n        const app = this.state.app;\n        if (!app) {\n            return null;\n        }\n\n        let icon;\n        if (app.icon_url) {\n            icon = app.icon_url;\n        } else {\n            icon = icon50;\n        }\n\n        let error;\n        if (this.state.error) {\n            error = (\n                <div className='prompt__error form-group'>\n                    <FormError error={this.state.error}/>\n                </div>\n            );\n        }\n\n        return (\n            <div className='container-fluid'>\n                <div className='prompt'>\n                    <div className='prompt__heading'>\n                        <div className='prompt__app-icon'>\n                            <img\n                                src={icon}\n                                width='50'\n                                height='50'\n                                alt=''\n                            />\n                        </div>\n                        <div className='text'>\n                            <FormattedHTMLMessage\n                                id='authorize.title'\n                                defaultMessage='<strong>{appName}</strong> would like to connect to your <strong>Mattermost</strong> user account'\n                                values={{\n                                    appName: app.name,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <p>\n                        <FormattedHTMLMessage\n                            id='authorize.app'\n                            defaultMessage='The app <strong>{appName}</strong> would like the ability to access and modify your basic information.'\n                            values={{\n                                appName: app.name,\n                            }}\n                        />\n                    </p>\n                    <h2 className='prompt__allow'>\n                        <FormattedHTMLMessage\n                            id='authorize.access'\n                            defaultMessage='Allow <strong>{appName}</strong> access?'\n                            values={{\n                                appName: app.name,\n                            }}\n                        />\n                    </h2>\n                    <div className='prompt__buttons'>\n                        <button\n                            type='submit'\n                            className='btn btn-link authorize-btn'\n                            onClick={this.handleDeny}\n                        >\n                            <FormattedMessage\n                                id='authorize.deny'\n                                defaultMessage='Deny'\n                            />\n                        </button>\n                        <button\n                            type='submit'\n                            className='btn btn-primary authorize-btn'\n                            onClick={this.handleAllow}\n                        >\n                            <FormattedMessage\n                                id='authorize.allow'\n                                defaultMessage='Allow'\n                            />\n                        </button>\n                    </div>\n                    {error}\n                </div>\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}