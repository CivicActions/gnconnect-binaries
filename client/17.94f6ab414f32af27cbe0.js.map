{"version":3,"sources":["webpack:///./components/do_verify_email/index.js","webpack:///./components/do_verify_email/do_verify_email.jsx","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png"],"names":["_redux","__webpack_require__","_reactRedux","_users","_general","connect","state","siteName","getConfig","SiteName","dispatch","actions","verifyUserEmail","bindActionCreators","DoVerifyEmail","_reactIntl","_browser_history","props","_this2","this","_classCallCheck3","default","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","verifyEmail","_asyncToGenerator3","_regenerator2","mark","_callee","verify","serverError","wrap","_context","prev","next","URLSearchParams","location","search","get","sent","data","browserHistory","push","encodeURIComponent","error","_react2","createElement","FormattedMessage","id","defaultMessage","setState","verifyStatus","stop","_loading_screen2","className","_back_button2","src","logoImage","React","PureComponent","propTypes","PropTypes","object","isRequired","string","shape","func","defaultProps","_reactRouterDom","_utils","BackButton","Link","onClick","to","url","title","localizeMessage","module","exports","p"],"mappings":"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","file":"17.94f6ab414f32af27cbe0.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {verifyUserEmail} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport DoVerifyEmail from './do_verify_email.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n\n    return {\n        siteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: {\n            verifyUserEmail: bindActionCreators(verifyUserEmail, dispatch),\n        },\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoVerifyEmail);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport logoImage from 'images/logo.png';\nimport BackButton from 'components/common/back_button.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nexport default class DoVerifyEmail extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Object with validation parameters given in link\n         */\n        location: PropTypes.object.isRequired,\n\n        /**\n         * Title of the app or site.\n         */\n        siteName: PropTypes.string,\n\n        /*\n         * Object with redux action creators\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to verify the user's email\n             */\n            verifyUserEmail: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            verifyStatus: 'pending',\n            serverError: '',\n        };\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        this.verifyEmail();\n    }\n\n    verifyEmail = async () => {\n        const {actions: {verifyUserEmail}} = this.props;\n        const verify = await verifyUserEmail((new URLSearchParams(this.props.location.search)).get('token'));\n\n        if (verify && verify.data) {\n            browserHistory.push('/login?extra=verified&email=' + encodeURIComponent((new URLSearchParams(this.props.location.search)).get('email')));\n        } else if (verify && verify.error) {\n            const serverError = (\n                <FormattedMessage\n                    id='signup_user_completed.invalid_invite'\n                    defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                />\n            );\n            this.setState({\n                verifyStatus: 'failure',\n                serverError,\n            });\n        }\n    }\n\n    render() {\n        if (this.state.verifyStatus !== 'failure') {\n            return (<LoadingScreen/>);\n        }\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className={'form-group has-error'}>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <div className='signup__content'>\n                            <h1>{this.props.siteName}</h1>\n                            <h4 className='color--light'>\n                                <FormattedMessage\n                                    id='web.root.signup_info'\n                                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                                />\n                            </h4>\n                            {serverError}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDoVerifyEmail.defaultProps = {\n    location: {},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div className='signup-header'>\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <span\n                        className='fa fa-chevron-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/5d6be4015bde2a4e0358c8bc110deadc.png\";"],"sourceRoot":""}