{"version":3,"sources":["webpack:///./components/backstage/components/backstage_header.jsx","webpack:///./node_modules/mattermost-redux/selectors/entities/integrations.js","webpack:///./components/spinner_button.jsx","webpack:///./components/backstage/components/backstage_list.jsx","webpack:///./components/integrations/delete_integration.jsx","webpack:///./components/delete_modal_trigger.jsx","webpack:///./components/integrations/abstract_incoming_webhook.jsx","webpack:///./components/channel_select.jsx","webpack:///./components/integrations/abstract_outgoing_webhook.jsx","webpack:///./components/integrations/abstract_oauth_app.jsx","webpack:///./components/integrations/abstract_command.jsx","webpack:///./components/integrations/confirm_integration/index.js","webpack:///./components/backstage/index.js","webpack:///./components/backstage/backstage_controller.jsx","webpack:///./components/integrations/index.js","webpack:///./components/integrations/integrations.jsx","webpack:///./images/incoming_webhook.jpg","webpack:///./images/oauth_icon.png","webpack:///./images/outgoing_webhook.jpg","webpack:///./images/slash_command_icon.jpg","webpack:///./components/integrations/integration_option.jsx","webpack:///./components/emoji/index.js","webpack:///./components/emoji/emoji_page.jsx","webpack:///./components/emoji/emoji_list/index.js","webpack:///./components/emoji/emoji_list/emoji_list.jsx","webpack:///./components/emoji/emoji_list_item/index.js","webpack:///./components/emoji/emoji_list_item/emoji_list_item.jsx","webpack:///./components/emoji/delete_emoji_modal.jsx","webpack:///./components/emoji/add_emoji.jsx","webpack:///./components/integrations/installed_incoming_webhooks/index.js","webpack:///./components/integrations/installed_incoming_webhooks/installed_incoming_webhooks.jsx","webpack:///./components/integrations/installed_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/index.js","webpack:///./components/integrations/add_incoming_webhook/add_incoming_webhook.jsx","webpack:///./components/integrations/edit_incoming_webhook/index.js","webpack:///./components/integrations/edit_incoming_webhook/edit_incoming_webhook.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/index.js","webpack:///./components/integrations/installed_outgoing_webhooks/installed_outgoing_webhooks.jsx","webpack:///./components/integrations/installed_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/index.js","webpack:///./components/integrations/add_outgoing_webhook/add_outgoing_webhook.jsx","webpack:///./components/integrations/edit_outgoing_webhook/index.js","webpack:///./components/integrations/edit_outgoing_webhook/edit_outgoing_webhook.jsx","webpack:///./components/integrations/installed_oauth_apps/index.js","webpack:///./components/integrations/installed_oauth_apps/installed_oauth_apps.jsx","webpack:///./components/integrations/installed_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/index.js","webpack:///./components/integrations/add_oauth_app/add_oauth_app.jsx","webpack:///./components/integrations/edit_oauth_app/index.js","webpack:///./components/integrations/edit_oauth_app/edit_oauth_app.jsx","webpack:///./components/integrations/commands_container/index.js","webpack:///./components/integrations/commands_container/commands_container.jsx","webpack:///./components/integrations/installed_commands/index.js","webpack:///./components/integrations/installed_commands/installed_commands.jsx","webpack:///./components/integrations/installed_command.jsx","webpack:///./components/integrations/add_command/index.js","webpack:///./components/integrations/add_command/add_command.jsx","webpack:///./components/integrations/edit_command/index.js","webpack:///./components/integrations/edit_command/edit_command.jsx","webpack:///./components/integrations/confirm_integration/confirm_integration.jsx","webpack:///./components/backstage/components/backstage_sidebar.jsx","webpack:///./components/backstage/components/backstage_category.jsx","webpack:///./components/backstage/components/backstage_section.jsx","webpack:///./components/backstage/components/backstage_navbar.jsx"],"names":["__webpack_require__","_utils","BackstageHeader","children","React","Children","forEach","this","props","child","index","push","_react2","default","createElement","key","className","title","localizeMessage","PropTypes","node","Component","Object","defineProperty","exports","value","getAutocompleteCommandsList","getAllCommands","getOutgoingHooksInCurrentTeam","undefined","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","getIncomingHooks","state","entities","integrations","incomingHooks","getOutgoingHooks","getCommands","getOAuthApps","oauthApps","getSystemCommands","_reselect","_teams","outgoingHooks","commands","systemCommands","createSelector","getCurrentTeamId","teamId","hooks","values","filter","o","currentTeamId","command","team_id","auto_complete","sort","a","b","display_name","localeCompare","_react","SpinnerButton","_props","spinning","_objectWithoutProperties3","src","loadingGif","_extends3","PureComponent","defaultProps","propTypes","bool","isRequired","onClick","func","_reactRouterDom","Utils","BackstageList","_classCallCheck3","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","updateFilter","bind","e","setState","toLowerCase","loading","_loading_screen2","map","cloneElement","emptyText","addLink","addText","Link","to","type","header","placeholder","searchPlaceholder","onChange","style","search","helpText","string","flexGrow","flexShrink","_reactIntl","DeleteIntegration","FormattedMessage","id","defaultMessage","messageId","DeleteModalTrigger","onDelete","handleOpenModal","preventDefault","showDeleteModal","handleConfirm","handleCancel","handleKeyDown","isKeyPressed","Constants","KeyCodes","ENTER","constructor","TypeError","triggerTitle","_confirm_modal2","show","modalTitle","message","modalMessage","confirmButtonText","modalConfirmButton","onConfirm","onCancel","onKeyDown","AbstractIncomingWebhook","getStateFromHook","hook","displayName","description","channelId","channel_id","channelLocked","channel_locked","username","iconURL","icon_url","saving","serverError","clientError","handleSubmit","action","then","updateDisplayName","updateDescription","updateChannelId","updateChannelLocked","checked","updateUsername","updateIconURL","initialHook","headerToRender","footerToRender","footer","_backstage_header2","team","name","onSubmit","htmlFor","maxLength","_channel_select2","selectOpen","selectPrivate","enablePostUsernameOverride","enablePostIconOverride","_form_error2","errors","_spinner_button2","object","_channel_utils","ChannelSelect","handleChannelChange","filterChannels","channels","ChannelStore","getAll","sortChannelsByDisplayName","selectDm","addChangeListener","removeChangeListener","channel","_this2","options","OPEN_CHANNEL","PRIVATE_CHANNEL","DM_CHANNEL","AbstractOutgoingWebhook","triggerWords","trigger_words","callbackUrls","callback_urls","contentType","content_type","triggerWhen","trigger_when","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_getIterator3","split","next","done","triggerWord","trim","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","callbackUrl","TeamStore","getCurrentId","parseInt","updateContentType","updateTriggerWords","updateTriggerWhen","updateCallbackUrls","renderExtra","rows","link","href","rel","_constants","AbstractOAuthApp","getStateFromApp","app","homepage","join","is_trusted","has_icon","Boolean","imageLoaded","refs","updateName","updateTrusted","updateHomepage","updateIconUrl","image","Image","onload","initialApp","icon","trusted","_system_permission_gate2","permissions","Permissions","MANAGE_SYSTEM","ref","REQUEST_POST","AbstractCommand","getStateFromCommand","trigger","url","method","iconUrl","autocomplete","autocompleteHint","auto_complete_hint","autocompleteDescription","auto_complete_desc","indexOf","substr","MIN_TRIGGER_LENGTH","MAX_TRIGGER_LENGTH","min","max","updateTrigger","updateUrl","updateMethod","updateAutocomplete","updateAutocompleteHint","updateAutocompleteDescription","initialCommand","_reactRedux","_integrations","connect","ConfirmIntegration","_users","_general","_roles","withRouter","user","getCurrentUser","getCurrentTeam","config","getConfig","siteName","SiteName","enableCustomEmoji","EnableCustomEmoji","enableIncomingWebhooks","EnableIncomingWebhooks","enableOutgoingWebhooks","EnableOutgoingWebhooks","enableCommands","EnableCommands","enableOAuthServiceProvider","EnableOAuthServiceProvider","canCreateCustomEmoji","haveISystemPermission","permission","MANAGE_EMOJIS","getMyTeams","t","haveITeamPermission","BackstageController","BackstageRoute","_ref","component","extraProps","rest","Route","render","scrollToTop","listRef","scrollTop","setListRef","_announcement_bar2","_system_notice2","_backstage_navbar2","_pluggable2","pluggableName","_backstage_sidebar2","Switch","exact","path","Integrations","match","InstalledIncomingWebhooks","AddIncomingWehook","EditIncomingWebhook","InstalledOutgoingWebhooks","AddOutgoingWebhook","EditOutgoingWebhook","CommandsContainer","InstalledOauthApps","AddOauthApp","EditOauthApp","Emoji","AddEmoji","shape","enableOnlyAdminIntegrations","EnableOnlyAdminIntegrations","updateTitle","currentSiteName","document","_team_permission_gate2","MANAGE_WEBHOOKS","_integration_option2","IncomingWebhookIcon","OutgoingWebhookIcon","MANAGE_SLASH_COMMANDS","SlashCommandIcon","MANAGE_OAUTH","OAuthIcon","appDirectory","module","p","IntegrationOption","_redux","teamName","teamDisplayName","general","dispatch","actions","bindActionCreators","loadRolesIfNeeded","EmojiPage","nextProps","_emoji_list2","_emojis","_emojis2","emojiIds","getCustomEmojiIdsSortedByName","getCustomEmojis","searchCustomEmojis","EmojiList","EMOJI_PER_PAGE","EMOJI_SEARCH_DELAY_MILLISECONDS","nextPage","page","nextLoading","SORT_BY_NAME","data","missingPages","previousPage","onSearchChange","term","clearTimeout","searchTimeout","setTimeout","_callee","_ref3","_regenerator2","wrap","_context","prev","searchEmojis","abrupt","sent","em","stop","deleteFromSearch","emojiId","newSearchEmojis","splice","_this3","_ref4","_this4","emojis","nextButton","previousButton","colSpan","_emoji_list_item2","pageStart","pageEnd","slice","buttonContents","_save_button2","btnClass","extraClasses","disabled","savingMessage","arrayOf","ownProps","emoji","customEmoji","creator","getUser","creator_id","creatorDisplayName","getDisplayNameByUser","creatorUsername","currentUserId","getCurrentUserId","currentTeam","deleteCustomEmoji","EmojiListItem","_client","handleDelete","deleteButton","_delete_emoji_modal2","MANAGE_OTHERS_EMOJIS","backgroundImage","Client4","getCustomEmojiImageUrl","DeleteEmoji","EmojiActions","updateImage","imageUrl","error","startsWith","endsWith","substring","test","EmojiStore","hasSystemEmoji","addEmoji","history","files","reader","FileReader","result","readAsDataURL","filename","preview","accept","multiple","contextTypes","router","Actions","_channels","_integrations2","canManageOthersWebhooks","MANAGE_OTHERS_WEBHOOKS","incomingWebhooks","_keys2","incomingWebhook","getAllChannels","users","getUsers","removeIncomingHook","deleteIncomingWebhook","incomingWebhookCompare","START_PAGE_NUM","PAGE_SIZE","displayNameA","channelA","displayNameB","canChange","user_id","_installed_incoming_webhook2","_backstage_list2","buildYourOwn","array","_url","InstalledIncomingWebhook","matchesFilter","_delete_integration2","getSiteURL","createAt","create_at","EnablePostUsernameOverride","EnablePostIconOverride","createIncomingHookRequest","requests","createIncomingHook","AddIncomingWebhook","_browser_history","HEADER","FOOTER","addIncomingHook","_asyncToGenerator3","mark","_ref2","browserHistory","_x","apply","_abstract_incoming_webhook2","hookId","URLSearchParams","location","get","updateIncomingHookRequest","updateIncomingHook","getIncomingHook","editIncomingHook","newHook","token","submitHook","_callee2","_context2","showConfirmModal","outgoingWebhooks","outgoingWebhook","removeOutgoingHook","regenOutgoingHookToken","InstalledOutgoingWebhook","regenOutgoingWebhookToken","outgoingWebhookCompare","channelB","_installed_outgoing_webhook2","onRegenToken","handleRegenToken","makeDisplayName","urls","createOutgoingHookRequest","createOutgoingHook","addOutgoingHook","_abstract_outgoing_webhook2","updateOutgoingHookRequest","updateOutgoingHook","getOutgoingHook","editOutgoingHook","triggerWordsSame","callbackUrlsSame","every","v","handleConfirmModal","confirmModalDismissed","confirmButton","confirmTitle","confirmMessage","canManageOauth","regenOAuthAppSecretRequest","updateOAuthApp","regenOAuthAppSecret","deleteOAuthApp","InstalledOAuthApps","nameA","nameB","_values2","oauthAppCompare","_installed_oauth_app2","oauthApp","onRegenerateSecret","oauthApplications","FAKE_SECRET","InstalledOAuthApp","handleShowClientSecret","clientSecret","client_secret","handleHideClientSecret","handleRegenerate","isTrusted","showHide","regen","FormattedHTMLMessage","clientId","getDisplayNameByUserId","addOAuthAppRequest","addOAuthApp","AddOAuthApp","_abstract_oauth_app2","oauthAppId","getOAuthApp","editOAuthApp","EditOAuthApp","newApp","submitOAuthApp","getCustomTeamCommands","CommandRoute","Redirect","InstalledCommands","AddCommand","EditCommand","canManageOthersSlashCommands","MANAGE_OTHERS_SLASH_COMMANDS","regenCommandToken","deleteCommand","commandCompare","_installed_command2","InstalledCommand","addCommand","_abstract_command2","commandId","editCommand","newCommand","originalCommand","submitCommand","handleKeyPress","window","addEventListener","removeEventListener","headerText","tokenText","COMMAND","INCOMING_WEBHOOK","incomingHook","OUTGOING_WEBHOOK","outgoingHook","OAUTH_APP","secret","BackstageSidebar","_backstage_category2","parentLink","_backstage_section2","renderCustomEmoji","renderIntegrations","BackstageCategory","NavLink","activeClassName","element","BackstageSection","subsection","getLink","clonedChildren","BackstageNavbar","DEFAULT_CHANNEL"],"mappings":"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","file":"30.828a841a2afc9976ba89.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackstageHeader extends React.Component {\n    static get propTypes() {\n        return {\n            children: PropTypes.node,\n        };\n    }\n\n    render() {\n        const children = [];\n\n        React.Children.forEach(this.props.children, (child, index) => {\n            if (index !== 0) {\n                children.push(\n                    <span\n                        key={'divider' + index}\n                        className='backstage-header__divider'\n                    >\n                        <i\n                            className='fa fa-angle-right'\n                            title={localizeMessage('generic_icons.breadcrumb', 'Breadcrumb Icon')}\n                        />\n                    </span>\n                );\n            }\n\n            children.push(child);\n        });\n\n        return (\n            <div className='backstage-header'>\n                <h1>\n                    {children}\n                </h1>\n            </div>\n        );\n    }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getAutocompleteCommandsList = exports.getAllCommands = exports.getOutgoingHooksInCurrentTeam = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexports.getIncomingHooks = getIncomingHooks;\nexports.getOutgoingHooks = getOutgoingHooks;\nexports.getCommands = getCommands;\nexports.getOAuthApps = getOAuthApps;\nexports.getSystemCommands = getSystemCommands;\n\nvar _reselect = require('reselect');\n\nvar _teams = require('./teams');\n\nfunction getIncomingHooks(state) {\n    return state.entities.integrations.incomingHooks;\n}\n\nfunction getOutgoingHooks(state) {\n    return state.entities.integrations.outgoingHooks;\n}\n\nfunction getCommands(state) {\n    return state.entities.integrations.commands;\n}\n\nfunction getOAuthApps(state) {\n    return state.entities.integrations.oauthApps;\n}\n\nfunction getSystemCommands(state) {\n    return state.entities.integrations.systemCommands;\n}\n\n/**\n * get outgoing hooks in current team\n */\nvar getOutgoingHooksInCurrentTeam = exports.getOutgoingHooksInCurrentTeam = (0, _reselect.createSelector)(_teams.getCurrentTeamId, getOutgoingHooks, function (teamId, hooks) {\n    return Object.values(hooks).filter(function (o) {\n        return o.teamId === teamId;\n    });\n});\n\nvar getAllCommands = exports.getAllCommands = (0, _reselect.createSelector)(getCommands, getSystemCommands, function (commands, systemCommands) {\n    return _extends({}, commands, systemCommands);\n});\n\nvar getAutocompleteCommandsList = exports.getAutocompleteCommandsList = (0, _reselect.createSelector)(getAllCommands, _teams.getCurrentTeamId, function (commands, currentTeamId) {\n    return Object.values(commands).filter(function (command) {\n        return command && (!command.team_id || command.team_id === currentTeamId) && command.auto_complete;\n    }).sort(function (a, b) {\n        return a.display_name.localeCompare(b.display_name);\n    });\n});","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\n\nimport loadingGif from 'images/load.gif';\n\nexport default class SpinnerButton extends PureComponent {\n    static defaultProps = {\n        spinning: false,\n    }\n\n    static propTypes = {\n\n        /**\n         * Children to show when not spinning\n         */\n        children: PropTypes.node,\n\n        /**\n         * Set to true to spin\n         */\n        spinning: PropTypes.bool.isRequired,\n\n        /**\n         * Callback function when button is clicked\n         */\n        onClick: PropTypes.func,\n    }\n\n    render() {\n        const {spinning, children, ...props} = this.props; // eslint-disable-line no-use-before-define\n\n        if (spinning) {\n            return (\n                <img\n                    className='spinner-button__gif'\n                    src={loadingGif}\n                />\n            );\n        }\n\n        return (\n            <button\n                className='btn btn-primary'\n                {...props}\n            >\n                {children}\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nexport default class BackstageList extends React.Component {\n    static propTypes = {\n        children: PropTypes.node,\n        header: PropTypes.node.isRequired,\n        addLink: PropTypes.string,\n        addText: PropTypes.node,\n        emptyText: PropTypes.node,\n        helpText: PropTypes.node,\n        loading: PropTypes.bool.isRequired,\n        searchPlaceholder: PropTypes.string,\n    }\n\n    static defaultProps = {\n        searchPlaceholder: Utils.localizeMessage('backstage_list.search', 'Search'),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.updateFilter = this.updateFilter.bind(this);\n\n        this.state = {\n            filter: '',\n        };\n    }\n\n    updateFilter(e) {\n        this.setState({\n            filter: e.target.value,\n        });\n    }\n\n    render() {\n        const filter = this.state.filter.toLowerCase();\n\n        let children;\n        if (this.props.loading) {\n            children = <LoadingScreen/>;\n        } else {\n            children = React.Children.map(this.props.children, (child) => {\n                return React.cloneElement(child, {filter});\n            });\n\n            if (children.length === 0 && this.props.emptyText) {\n                children = (\n                    <span className='backstage-list__item backstage-list__empty'>\n                        {this.props.emptyText}\n                    </span>\n                );\n            }\n        }\n\n        let addLink = null;\n        if (this.props.addLink && this.props.addText) {\n            addLink = (\n                <Link\n                    className='add-link'\n                    to={this.props.addLink}\n                >\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                    >\n                        <span>\n                            {this.props.addText}\n                        </span>\n                    </button>\n                </Link>\n            );\n        }\n\n        return (\n            <div className='backstage-content'>\n                <div className='backstage-header'>\n                    <h1>\n                        {this.props.header}\n                    </h1>\n                    {addLink}\n                </div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <i\n                            className='fa fa-search'\n                            title={Utils.localizeMessage('generic_icons.search', 'Search Icon')}\n                        />\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={this.props.searchPlaceholder}\n                            value={this.state.filter}\n                            onChange={this.updateFilter}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    {this.props.helpText}\n                </span>\n                <div className='backstage-list'>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class DeleteIntegration extends DeleteModalTrigger {\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='installed_integrations.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.title'\n                defaultMessage='Delete Integration'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <i\n                    className='fa fa-warning fa-margin--right'\n                    title={localizeMessage('generic_icons.warning', 'Warning Icon')}\n                />\n                <FormattedMessage\n                    id={this.props.messageId}\n                    defaultMessage='This action permanently deletes the integration and breaks any integrations using it. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n\nDeleteIntegration.propTypes = {\n    messageId: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport ConfirmModal from './confirm_modal.jsx';\n\nexport default class DeleteModalTrigger extends React.PureComponent {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        if (this.constructor === DeleteModalTrigger) {\n            throw new TypeError('Can not construct abstract class.');\n        }\n\n        this.state = {\n            showDeleteModal: false,\n        };\n    }\n\n    handleOpenModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showDeleteModal: true,\n        });\n    }\n\n    handleConfirm = () => {\n        this.props.onDelete();\n    }\n\n    handleCancel = () => {\n        this.setState({\n            showDeleteModal: false,\n        });\n    }\n\n    handleKeyDown = (e) => {\n        if (Utils.isKeyPressed(e, Constants.KeyCodes.ENTER)) {\n            this.handleConfirm(e);\n        }\n    }\n\n    render() {\n        return (\n            <span>\n                <button\n                    className='color--link style--none'\n                    onClick={this.handleOpenModal}\n                >\n                    { this.triggerTitle }\n                </button>\n                <ConfirmModal\n                    show={this.state.showDeleteModal}\n                    title={this.modalTitle}\n                    message={this.modalMessage}\n                    confirmButtonText={this.modalConfirmButton}\n                    onConfirm={this.handleConfirm}\n                    onCancel={this.handleCancel}\n                    onKeyDown={this.handleKeyDown}\n                />\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AbstractIncomingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The hook used to set the initial state\n        */\n        initialHook: PropTypes.object,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            channelId: hook.channel_id || '',\n            channelLocked: hook.channel_locked || false,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n            saving: false,\n            serverError: '',\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: '',\n            clientError: '',\n        });\n\n        if (!this.state.channelId) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_incoming_webhook.channelRequired'\n                        defaultMessage='A valid channel is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            channel_id: this.state.channelId,\n            channel_locked: this.state.channelLocked,\n            display_name: this.state.displayName,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateChannelLocked = (e) => {\n        this.setState({\n            channelLocked: e.target.checked,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks`}>\n                        <FormattedMessage\n                            id='installed_incoming_webhooks.header'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                    selectPrivate={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channel.help'\n                                        defaultMessage='The default public or private channel that receives the webhook payloads. You must belong to the private channel when setting up the webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelLocked'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channelLocked'\n                                    defaultMessage='Lock to this channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='channelLocked'\n                                    type='checkbox'\n                                    checked={this.state.channelLocked}\n                                    onChange={this.updateChannelLocked}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channelLocked.help'\n                                        defaultMessage='If set, the incoming webhook can only post to the channel selected above.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        { this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.username.help'\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        { this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.icon_url.help'\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={`/${this.props.team.name}/integrations/incoming_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ChannelStore from 'stores/channel_store.jsx';\nimport {sortChannelsByDisplayName} from 'utils/channel_utils.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ChannelSelect extends React.Component {\n    static get propTypes() {\n        return {\n            onChange: PropTypes.func,\n            value: PropTypes.string,\n            selectOpen: PropTypes.bool.isRequired,\n            selectPrivate: PropTypes.bool.isRequired,\n            selectDm: PropTypes.bool.isRequired,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            selectOpen: false,\n            selectPrivate: false,\n            selectDm: false,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleChannelChange = this.handleChannelChange.bind(this);\n        this.filterChannels = this.filterChannels.bind(this);\n\n        this.state = {\n            channels: ChannelStore.getAll().filter(this.filterChannels).sort(sortChannelsByDisplayName),\n        };\n    }\n\n    componentDidMount() {\n        ChannelStore.addChangeListener(this.handleChannelChange);\n    }\n\n    componentWillUnmount() {\n        ChannelStore.removeChangeListener(this.handleChannelChange);\n    }\n\n    handleChannelChange() {\n        this.setState({\n            channels: ChannelStore.getAll().\n                filter(this.filterChannels).sort(sortChannelsByDisplayName),\n        });\n    }\n\n    filterChannels(channel) {\n        if (channel.display_name) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const options = [\n            <option\n                key=''\n                value=''\n            >\n                {Utils.localizeMessage('channel_select.placeholder', '--- Select a channel ---')}\n            </option>,\n        ];\n\n        this.state.channels.forEach((channel) => {\n            if (channel.type === Constants.OPEN_CHANNEL && this.props.selectOpen) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channel.display_name}\n                    </option>\n                );\n            } else if (channel.type === Constants.PRIVATE_CHANNEL && this.props.selectPrivate) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channel.display_name}\n                    </option>\n                );\n            } else if (channel.type === Constants.DM_CHANNEL && this.props.selectDm) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channel.display_name}\n                    </option>\n                );\n            }\n        });\n\n        return (\n            <select\n                className='form-control'\n                value={this.props.value}\n                onChange={this.props.onChange}\n            >\n                {options}\n            </select>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport TeamStore from 'stores/team_store.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AbstractOutgoingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The header text to render, has id and defaultMessage\n         */\n        header: PropTypes.object.isRequired,\n\n        /**\n         * The footer text to render, has id and defaultMessage\n         */\n        footer: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n         * The server error text after a failed action\n         */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n         * The hook used to set the initial state\n         */\n        initialHook: PropTypes.object,\n\n        /**\n         * The async function to run when the action button is pressed\n         */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        let triggerWords = '';\n        if (hook.trigger_words) {\n            let i = 0;\n            for (i = 0; i < hook.trigger_words.length; i++) {\n                triggerWords += hook.trigger_words[i] + '\\n';\n            }\n        }\n\n        let callbackUrls = '';\n        if (hook.callback_urls) {\n            let i = 0;\n            for (i = 0; i < hook.callback_urls.length; i++) {\n                callbackUrls += hook.callback_urls[i] + '\\n';\n            }\n        }\n\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            contentType: hook.content_type || 'application/x-www-form-urlencoded',\n            channelId: hook.channel_id || '',\n            triggerWords,\n            triggerWhen: hook.trigger_when || 0,\n            callbackUrls,\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        const triggerWords = [];\n        if (this.state.triggerWords) {\n            for (let triggerWord of this.state.triggerWords.split('\\n')) {\n                triggerWord = triggerWord.trim();\n\n                if (triggerWord.length > 0) {\n                    triggerWords.push(triggerWord);\n                }\n            }\n        }\n\n        if (!this.state.channelId && triggerWords.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.triggerWordsOrChannelRequired'\n                        defaultMessage='A valid channel or a list of trigger words is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            team_id: TeamStore.getCurrentId(),\n            channel_id: this.state.channelId,\n            trigger_words: triggerWords,\n            trigger_when: parseInt(this.state.triggerWhen, 10),\n            callback_urls: callbackUrls,\n            display_name: this.state.displayName,\n            content_type: this.state.contentType,\n            description: this.state.description,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateContentType = (e) => {\n        this.setState({\n            contentType: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateTriggerWords = (e) => {\n        this.setState({\n            triggerWords: e.target.value,\n        });\n    }\n\n    updateTriggerWhen = (e) => {\n        this.setState({\n            triggerWhen: e.target.value,\n        });\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    render() {\n        const contentTypeOption1 = 'application/x-www-form-urlencoded';\n        const contentTypeOption2 = 'application/json';\n\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n        var renderExtra = this.props.renderExtra;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks`}>\n                        <FormattedMessage\n                            id='installed_outgoing_webhooks.header'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='contentType'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.content_Type'\n                                    defaultMessage='Content Type'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.contentType}\n                                    onChange={this.updateContentType}\n                                >\n                                    <option\n                                        value={contentTypeOption1}\n                                    >\n                                        {contentTypeOption1}\n                                    </option>\n                                    <option\n                                        value={contentTypeOption2}\n                                    >\n                                        {contentTypeOption2}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help1'\n                                        defaultMessage='Choose the content type by which the request will be sent.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help2'\n                                        defaultMessage='If application/x-www-form-urlencoded is chosen, the server will encode the parameters in a URL format in the request body.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help3'\n                                        defaultMessage='If application/json is chosen, the server will format the request body as JSON.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.channel.help'\n                                        defaultMessage='Public channel that delivers payload to webhook. Optional if at least one Trigger Word is specified.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWords'\n                                    defaultMessage='Trigger Words (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='triggerWords'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.triggerWords}\n                                    onChange={this.updateTriggerWords}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWords.help'\n                                        defaultMessage='Messages that start with one of the specified words will trigger the outgoing webhook. Optional if Channel is selected.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWordsTriggerWhen'\n                                    defaultMessage='Trigger When'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.triggerWhen}\n                                    onChange={this.updateTriggerWhen}\n                                >\n                                    <option\n                                        value='0'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenFullWord', 'First word matches a trigger word exactly')}\n                                    </option>\n                                    <option\n                                        value='1'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenStartsWith', 'First word starts with a trigger word')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWordsTriggerWhen.help'\n                                        defaultMessage='Choose when to trigger the outgoing webhook; if the first word of a message matches a Trigger Word exactly, or if it starts with a Trigger Word.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.callbackUrls.help'\n                                        defaultMessage='The URL that messages will be sent to. If the URL is private, add it as a {link}.'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://about.mattermost.com/default-allow-internal-connections-settings-documentation/'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_outgoing_webhook.callbackUrls.helpLinkText'\n                                                        defaultMessage='trusted internal connection'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={`/${this.props.team.name}/integrations/outgoing_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nexport default class AbstractOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp used to set the initial state\n        */\n        initialApp: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.image = new Image();\n        this.image.onload = this.imageLoaded;\n        this.state = this.getStateFromApp(this.props.initialApp || {});\n    }\n\n    getStateFromApp = (app) => {\n        return {\n            name: app.name || '',\n            description: app.description || '',\n            homepage: app.homepage || '',\n            icon_url: app.icon_url || '',\n            callbackUrls: app.callback_urls ? app.callback_urls.join('\\n') : '',\n            is_trusted: app.is_trusted || false,\n            has_icon: Boolean(app.icon_url),\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    imageLoaded = () => {\n        this.setState({\n            has_icon: true,\n            icon_url: this.refs.icon_url.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        if (!this.state.name) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.nameRequired'\n                        defaultMessage='Name for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.description) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.descriptionRequired'\n                        defaultMessage='Description for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.homepage) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.homepageRequired'\n                        defaultMessage='Homepage for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const app = {\n            name: this.state.name,\n            callback_urls: callbackUrls,\n            homepage: this.state.homepage,\n            description: this.state.description,\n            is_trusted: this.state.is_trusted,\n            icon_url: this.state.icon_url,\n        };\n\n        this.props.action(app).then(() => this.setState({saving: false}));\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateTrusted = (e) => {\n        this.setState({\n            is_trusted: e.target.value === 'true',\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateHomepage = (e) => {\n        this.setState({\n            homepage: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            has_icon: false,\n            icon_url: e.target.value,\n        });\n        this.image.src = e.target.value;\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    render() {\n        const headerToRender = this.props.header;\n        const footerToRender = this.props.footer;\n        const renderExtra = this.props.renderExtra;\n\n        let icon;\n        if (this.state.has_icon) {\n            icon = (\n                <div className='integration__icon'>\n                    <img src={this.state.icon_url}/>\n                </div>\n            );\n        }\n\n        const trusted = (\n            <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='is_trusted'\n                    >\n                        <FormattedMessage\n                            id='installed_oauth_apps.trusted'\n                            defaultMessage='Is Trusted'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='true'\n                                name='is_trusted'\n                                checked={this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.yes'\n                                defaultMessage='Yes'\n                            />\n                        </label>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='false'\n                                name='is_trusted'\n                                checked={!this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.no'\n                                defaultMessage='No'\n                            />\n                        </label>\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_oauth_app.trusted.help'\n                                defaultMessage=\"When true, the OAuth 2.0 application is considered trusted by the Mattermost server and doesn't require the user to accept authorization. When false, an additional window will appear, asking the user to accept or deny the authorization.\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </SystemPermissionGate>\n        );\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps`}>\n                        <FormattedMessage\n                            id='installed_oauth_apps.header'\n                            defaultMessage='Installed OAuth2 Apps'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    {icon}\n                    <form className='form-horizontal'>\n                        {trusted}\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.name'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.name.help'\n                                        defaultMessage='Display name for your OAuth 2.0 application made of up to 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.description.help'\n                                        defaultMessage='Description for your OAuth 2.0 application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='homepage'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.homepage'\n                                    defaultMessage='Homepage'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='homepage'\n                                    type='url'\n                                    maxLength='256'\n                                    className='form-control'\n                                    value={this.state.homepage}\n                                    onChange={this.updateHomepage}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.homepage.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='icon_url'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.iconUrl'\n                                    defaultMessage='Icon URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='icon_url'\n                                    ref='icon_url'\n                                    type='url'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.icon_url}\n                                    onChange={this.updateIconUrl}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.icon.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.callbackUrls.help'\n                                        defaultMessage='The redirect URIs to which the service will redirect users after accepting or denying authorization of your application, and which will handle authorization codes or access tokens. Must be a valid URL and start with http:// or https://.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={`/${this.props.team.name}/integrations/oauth2-apps`}\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nconst REQUEST_POST = 'P';\nconst REQUEST_GET = 'G';\n\nexport default class AbstractCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The Command used to set the initial state\n        */\n        initialCommand: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromCommand(this.props.initialCommand || {});\n    }\n\n    getStateFromCommand = (command) => {\n        return {\n            displayName: command.display_name || '',\n            description: command.description || '',\n            trigger: command.trigger || '',\n            url: command.url || '',\n            method: command.method || REQUEST_POST,\n            username: command.username || '',\n            iconUrl: command.icon_url || '',\n            autocomplete: command.auto_complete || false,\n            autocompleteHint: command.auto_complete_hint || '',\n            autocompleteDescription: command.auto_complete_desc || '',\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        let triggerWord = this.state.trigger.trim().toLowerCase();\n        if (triggerWord.indexOf('/') === 0) {\n            triggerWord = triggerWord.substr(1);\n        }\n\n        const command = {\n            display_name: this.state.displayName,\n            description: this.state.description,\n            trigger: triggerWord,\n            url: this.state.url.trim(),\n            method: this.state.method,\n            username: this.state.username,\n            icon_url: this.state.iconUrl,\n            auto_complete: this.state.autocomplete,\n            team_id: this.props.team.id,\n        };\n\n        if (command.auto_complete) {\n            command.auto_complete_desc = this.state.autocompleteDescription;\n            command.auto_complete_hint = this.state.autocompleteHint;\n        }\n\n        if (!command.trigger) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerRequired'\n                        defaultMessage='A trigger word is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf('/') === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSlash'\n                        defaultMessage='A trigger word cannot begin with a /'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf(' ') !== -1) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSpace'\n                        defaultMessage='A trigger word must not contain spaces'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (command.trigger.length < Constants.MIN_TRIGGER_LENGTH ||\n            command.trigger.length > Constants.MAX_TRIGGER_LENGTH) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidLength'\n                        defaultMessage='A trigger word must contain between {min} and {max} characters'\n                        values={{\n                            min: Constants.MIN_TRIGGER_LENGTH,\n                            max: Constants.MAX_TRIGGER_LENGTH,\n                        }}\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!command.url) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.urlRequired'\n                        defaultMessage='A request URL is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        this.props.action(command).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateTrigger = (e) => {\n        this.setState({\n            trigger: e.target.value,\n        });\n    }\n\n    updateUrl = (e) => {\n        this.setState({\n            url: e.target.value,\n        });\n    }\n\n    updateMethod = (e) => {\n        this.setState({\n            method: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            iconUrl: e.target.value,\n        });\n    }\n\n    updateAutocomplete = (e) => {\n        this.setState({\n            autocomplete: e.target.checked,\n        });\n    }\n\n    updateAutocompleteHint = (e) => {\n        this.setState({\n            autocompleteHint: e.target.value,\n        });\n    }\n\n    updateAutocompleteDescription = (e) => {\n        this.setState({\n            autocompleteDescription: e.target.value,\n        });\n    }\n\n    render() {\n        let autocompleteHint = null;\n        let autocompleteDescription = null;\n\n        if (this.state.autocomplete) {\n            autocompleteHint = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteHint'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteHint'\n                            defaultMessage='Autocomplete Hint'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <input\n                            id='autocompleteHint'\n                            type='text'\n                            maxLength='1024'\n                            className='form-control'\n                            value={this.state.autocompleteHint}\n                            onChange={this.updateAutocompleteHint}\n                            placeholder={Utils.localizeMessage('add_command.autocompleteHint.placeholder', 'Example: [Patient Name]')}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteHint.help'\n                                defaultMessage='(Optional) Arguments associated with your slash command, displayed as help in the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n\n            autocompleteDescription = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteDescription'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteDescription'\n                            defaultMessage='Autocomplete Description'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <input\n                            id='description'\n                            type='text'\n                            maxLength='128'\n                            className='form-control'\n                            value={this.state.autocompleteDescription}\n                            onChange={this.updateAutocompleteDescription}\n                            placeholder={Utils.localizeMessage('add_command.autocompleteDescription.placeholder', 'Example: \"Returns search results for patient records\"')}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteDescription.help'\n                                defaultMessage='(Optional) Short description of slash command for the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/commands'}>\n                        <FormattedMessage\n                            id='installed_command.header'\n                            defaultMessage='Slash Commands'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={this.props.header.id}\n                        defaultMessage={this.props.header.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_command.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the slash command settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_command.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='trigger'\n                            >\n                                <FormattedMessage\n                                    id='add_command.trigger'\n                                    defaultMessage='Command Trigger Word'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='trigger'\n                                    type='text'\n                                    maxLength={Constants.MAX_TRIGGER_LENGTH}\n                                    className='form-control'\n                                    value={this.state.trigger}\n                                    onChange={this.updateTrigger}\n                                    placeholder={Utils.localizeMessage('add_command.trigger.placeholder', 'Command trigger e.g. \"hello\" not including the slash')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.help'\n                                        defaultMessage='Trigger word must be unique, and cannot begin with a slash or contain any spaces.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpExamples'\n                                        defaultMessage='Examples: client, employee, patient, weather'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpReserved'\n                                        defaultMessage='Reserved: {link}'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://docs.mattermost.com/help/messaging/executing-commands.html#built-in-commands'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_command.trigger.helpReservedLinkText'\n                                                        defaultMessage='see list of built-in slash commands'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='url'\n                            >\n                                <FormattedMessage\n                                    id='add_command.url'\n                                    defaultMessage='Request URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='url'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.url}\n                                    onChange={this.updateUrl}\n                                    placeholder={Utils.localizeMessage('add_command.url.placeholder', 'Must start with http:// or https://')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.url.help'\n                                        defaultMessage='The callback URL to receive the HTTP POST or GET event request when the slash command is run.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='method'\n                            >\n                                <FormattedMessage\n                                    id='add_command.method'\n                                    defaultMessage='Request Method'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    id='method'\n                                    className='form-control'\n                                    value={this.state.method}\n                                    onChange={this.updateMethod}\n                                >\n                                    <option value={REQUEST_POST}>\n                                        {Utils.localizeMessage('add_command.method.post', 'POST')}\n                                    </option>\n                                    <option value={REQUEST_GET}>\n                                        {Utils.localizeMessage('add_command.method.get', 'GET')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.method.help'\n                                        defaultMessage='The type of command request issued to the Request URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='add_command.username'\n                                    defaultMessage='Response Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='username'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                    placeholder={Utils.localizeMessage('add_command.username.placeholder', 'Username')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.username.help'\n                                        defaultMessage='(Optional) Choose a username override for responses for this slash command. Usernames can consist of up to 22 characters consisting of lowercase letters, numbers and they symbols \"-\", \"_\", and \".\" .'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='iconUrl'\n                            >\n                                <FormattedMessage\n                                    id='add_command.iconUrl'\n                                    defaultMessage='Response Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='iconUrl'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.iconUrl}\n                                    onChange={this.updateIconUrl}\n                                    placeholder={Utils.localizeMessage('add_command.iconUrl.placeholder', 'https://www.example.com/myicon.png')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.iconUrl.help'\n                                        defaultMessage='(Optional) Choose a profile picture override for the post responses to this slash command. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='autocomplete'\n                            >\n                                <FormattedMessage\n                                    id='add_command.autocomplete'\n                                    defaultMessage='Autocomplete'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='autocomplete'\n                                    type='checkbox'\n                                    checked={this.state.autocomplete}\n                                    onChange={this.updateAutocomplete}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.autocomplete.help'\n                                        defaultMessage='(Optional) Show slash command in autocomplete list.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {autocompleteHint}\n                        {autocompleteDescription}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={'/' + this.props.team.name + '/integrations/commands'}\n                            >\n                                <FormattedMessage\n                                    id='add_command.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={this.props.footer.id}\n                                    defaultMessage={this.props.footer.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {this.props.renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCommands, getOAuthApps, getIncomingHooks, getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\n\nimport ConfirmIntegration from './confirm_integration.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        commands: getCommands(state),\n        oauthApps: getOAuthApps(state),\n        incomingHooks: getIncomingHooks(state),\n        outgoingHooks: getOutgoingHooks(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ConfirmIntegration);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getMyTeams, getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {haveITeamPermission, haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageController from './backstage_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const user = getCurrentUser(state);\n    const team = getCurrentTeam(state);\n\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enableCustomEmoji = config.EnableCustomEmoji === 'true';\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    let canCreateCustomEmoji = haveISystemPermission(state, {permission: Permissions.MANAGE_EMOJIS});\n    if (!canCreateCustomEmoji) {\n        for (const t of getMyTeams(state)) {\n            if (haveITeamPermission(state, {team: t.id, permission: Permissions.MANAGE_EMOJIS})) {\n                canCreateCustomEmoji = true;\n                break;\n            }\n        }\n    }\n\n    return {\n        user,\n        team,\n        siteName,\n        enableCustomEmoji,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        canCreateCustomEmoji,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(BackstageController));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Pluggable from 'plugins/pluggable';\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport Integrations from 'components/integrations';\nimport Emoji from 'components/emoji';\nimport AddEmoji from 'components/emoji/add_emoji';\nimport InstalledIncomingWebhooks from 'components/integrations/installed_incoming_webhooks';\nimport AddIncomingWehook from 'components/integrations/add_incoming_webhook';\nimport EditIncomingWebhook from 'components/integrations/edit_incoming_webhook';\nimport InstalledOutgoingWebhooks from 'components/integrations/installed_outgoing_webhooks';\nimport AddOutgoingWebhook from 'components/integrations/add_outgoing_webhook';\nimport EditOutgoingWebhook from 'components/integrations/edit_outgoing_webhook';\nimport InstalledOauthApps from 'components/integrations/installed_oauth_apps';\nimport AddOauthApp from 'components/integrations/add_oauth_app';\nimport EditOauthApp from 'components/integrations/edit_oauth_app';\nimport CommandsContainer from 'components/integrations/commands_container';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nimport BackstageSidebar from './components/backstage_sidebar.jsx';\nimport BackstageNavbar from './components/backstage_navbar';\n\nconst BackstageRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class BackstageController extends React.Component {\n    static propTypes = {\n\n        /**\n         * Current user.\n         */\n        user: PropTypes.object,\n\n        /**\n         * Current team.\n         */\n        team: PropTypes.object,\n\n        /**\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        siteName: PropTypes.string,\n        enableCustomEmoji: PropTypes.bool.isRequired,\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n        enableOutgoingWebhooks: PropTypes.bool.isRequired,\n        enableCommands: PropTypes.bool.isRequired,\n        enableOAuthServiceProvider: PropTypes.bool.isRequired,\n        canCreateCustomEmoji: PropTypes.bool.isRequired,\n    }\n\n    scrollToTop = () => {\n        if (this.listRef) {\n            this.listRef.scrollTop = 0;\n        }\n    }\n\n    setListRef = (ref) => {\n        this.listRef = ref;\n    }\n\n    render() {\n        if (this.props.team == null || this.props.user == null) {\n            return <div/>;\n        }\n        const extraProps = {\n            team: this.props.team,\n            user: this.props.user,\n            scrollToTop: this.scrollToTop,\n        };\n        return (\n            <div className='backstage'>\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <BackstageNavbar\n                    team={this.props.team}\n                    siteName={this.props.siteName}\n                />\n                <Pluggable pluggableName='Root'/>\n                <div\n                    className='backstage-body'\n                    ref={this.setListRef}\n                >\n                    <BackstageSidebar\n                        team={this.props.team}\n                        user={this.props.user}\n                        enableCustomEmoji={this.props.enableCustomEmoji}\n                        enableIncomingWebhooks={this.props.enableIncomingWebhooks}\n                        enableOutgoingWebhooks={this.props.enableOutgoingWebhooks}\n                        enableCommands={this.props.enableCommands}\n                        enableOAuthServiceProvider={this.props.enableOAuthServiceProvider}\n                        canCreateCustomEmoji={this.props.canCreateCustomEmoji}\n                    />\n                    <Switch>\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/integrations'}\n                            component={Integrations}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/incoming_webhooks`}\n                            component={InstalledIncomingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/add`}\n                            component={AddIncomingWehook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/edit`}\n                            component={EditIncomingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/outgoing_webhooks`}\n                            component={InstalledOutgoingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/add`}\n                            component={AddOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/edit`}\n                            component={EditOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/commands`}\n                            component={CommandsContainer}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/oauth2-apps`}\n                            component={InstalledOauthApps}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/add`}\n                            component={AddOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/edit`}\n                            component={EditOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/confirm`}\n                            component={ConfirmIntegration}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/emoji'}\n                            component={Emoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/add`}\n                            component={AddEmoji}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport Integrations from './integrations.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n    const enableOnlyAdminIntegrations = config.EnableOnlyAdminIntegrations === 'true';\n\n    return {\n        siteName,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        enableOnlyAdminIntegrations,\n    };\n}\n\nexport default connect(mapStateToProps)(Integrations);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport * as Utils from 'utils/utils.jsx';\nimport IncomingWebhookIcon from 'images/incoming_webhook.jpg';\nimport OAuthIcon from 'images/oauth_icon.png';\nimport OutgoingWebhookIcon from 'images/outgoing_webhook.jpg';\nimport SlashCommandIcon from 'images/slash_command_icon.jpg';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport IntegrationOption from './integration_option.jsx';\n\nexport default class Integrations extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            user: PropTypes.object,\n            siteName: PropTypes.string,\n            enableIncomingWebhooks: PropTypes.bool,\n            enableOutgoingWebhooks: PropTypes.bool,\n            enableCommands: PropTypes.bool,\n            enableOAuthServiceProvider: PropTypes.bool,\n            enableOnlyAdminIntegrations: PropTypes.bool,\n        };\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n    }\n\n    updateTitle = () => {\n        const currentSiteName = this.props.siteName || '';\n        document.title = Utils.localizeMessage('admin.sidebar.integrations', 'Integrations') + ' - ' + this.props.team.display_name + ' ' + currentSiteName;\n    }\n\n    render() {\n        const options = [];\n\n        if (this.props.enableIncomingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    key='incomingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='incomingWebhook'\n                        image={IncomingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.title'\n                                defaultMessage='Incoming Webhook'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.description'\n                                defaultMessage='Incoming webhooks allow external integrations to send messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/incoming_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOutgoingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    key='outgoingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='outgoingWebhook'\n                        image={OutgoingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.title'\n                                defaultMessage='Outgoing Webhook'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.description'\n                                defaultMessage='Outgoing webhooks allow external integrations to receive and respond to messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/outgoing_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableCommands) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    key='commandPermission'\n                >\n                    <IntegrationOption\n                        key='command'\n                        image={SlashCommandIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.command.title'\n                                defaultMessage='Slash Command'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.command.description'\n                                defaultMessage='Slash commands send events to an external integration'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/commands'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOAuthServiceProvider) {\n            options.push(\n                <SystemPermissionGate\n                    permissions={[Permissions.MANAGE_OAUTH]}\n                    key='oauth2AppsPermission'\n                >\n                    <IntegrationOption\n                        key='oauth2Apps'\n                        image={OAuthIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.oauthApps.title'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.oauthApps.description'\n                                defaultMessage='Auth 2.0 allows external applications to make authorized requests to the Mattermost API.'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/oauth2-apps'}\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='integrations.header'\n                            defaultMessage='Integrations'\n                        />\n                    </h1>\n                </div>\n                <div className='backstage-list__help'>\n                    <FormattedMessage\n                        id='integrations.help'\n                        defaultMessage='Visit the {appDirectory} to find self-hosted, third-party apps and integrations for Mattermost.'\n                        values={{\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='integrations.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                </div>\n                <div>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/fd69f7891f867c2aa14011da92b728ac.jpg\";","module.exports = __webpack_public_path__ + \"files/ce81936d829c1ac530749ba2fe913de0.png\";","module.exports = __webpack_public_path__ + \"files/2aa264fb1956b8be41f2047d428a1a1e.jpg\";","module.exports = __webpack_public_path__ + \"files/d184fcdb23c1e24bfd7132950ceb4f68.jpg\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class IntegrationOption extends React.Component {\n    static get propTypes() {\n        return {\n            image: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            description: PropTypes.node.isRequired,\n            link: PropTypes.string.isRequired,\n        };\n    }\n\n    render() {\n        const {image, title, description, link} = this.props;\n\n        return (\n            <Link\n                to={link}\n                className='integration-option'\n            >\n                <img\n                    className='integration-option__image'\n                    src={image}\n                />\n                <div className='integration-option__title'>\n                    {title}\n                </div>\n                <div className='integration-option__description'>\n                    {description}\n                </div>\n            </Link>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\n\nimport EmojiPage from './emoji_page.jsx';\n\nfunction mapStateToProps(state) {\n    const team = getCurrentTeam(state) || {};\n\n    return {\n        teamId: team.id,\n        teamName: team.name,\n        teamDisplayName: team.display_name,\n        siteName: state.entities.general.config.SiteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport * as Utils from 'utils/utils.jsx';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport EmojiList from './emoji_list';\n\nexport default class EmojiPage extends React.Component {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        teamName: PropTypes.string.isRequired,\n        teamDisplayName: PropTypes.string.isRequired,\n        siteName: PropTypes.string,\n        scrollToTop: PropTypes.func.isRequired,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        teamName: '',\n        teamDisplayName: '',\n        siteName: '',\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n        this.props.actions.loadRolesIfNeeded(['system_admin', 'team_admin', 'system_user', 'team_user']);\n    }\n\n    updateTitle = (props = this.props) => {\n        document.title = Utils.localizeMessage('custom_emoji.header', 'Custom Emoji') + ' - ' + props.teamDisplayName + ' ' + props.siteName;\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.siteName !== nextProps.siteName) {\n            this.updateTitle(nextProps);\n        }\n    }\n\n    render() {\n        return (\n            <div className='backstage-content emoji-list'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </h1>\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.MANAGE_EMOJIS]}\n                    >\n                        <Link\n                            className='add-link'\n                            to={'/' + this.props.teamName + '/emoji/add'}\n                        >\n                            <button\n                                type='button'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='emoji_list.add'\n                                    defaultMessage='Add Custom Emoji'\n                                />\n                            </button>\n                        </Link>\n                    </TeamPermissionGate>\n                    <EmojiList scrollToTop={this.props.scrollToTop}/>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCustomEmojiIdsSortedByName} from 'mattermost-redux/selectors/entities/emojis';\n\nimport {getCustomEmojis, searchCustomEmojis} from 'mattermost-redux/actions/emojis';\n\nimport EmojiList from './emoji_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiIds: getCustomEmojiIdsSortedByName(state) || [],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomEmojis,\n            searchCustomEmojis,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Emoji} from 'mattermost-redux/constants';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport SaveButton from 'components/save_button.jsx';\nimport EmojiListItem from 'components/emoji/emoji_list_item';\n\nconst EMOJI_PER_PAGE = 50;\nconst EMOJI_SEARCH_DELAY_MILLISECONDS = 200;\n\nexport default class EmojiList extends React.Component {\n    static propTypes = {\n\n        /**\n         * Custom emojis on the system.\n         */\n        emojiIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Function to scroll list to top.\n         */\n        scrollToTop: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Get pages of custom emojis.\n             */\n            getCustomEmojis: PropTypes.func.isRequired,\n\n            /**\n             * Search custom emojis.\n             */\n            searchCustomEmojis: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeout = null;\n\n        this.state = {\n            loading: true,\n            page: 0,\n            nextLoading: false,\n            searchEmojis: null,\n            missingPages: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getCustomEmojis(0, EMOJI_PER_PAGE + 1, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({loading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n        });\n    }\n\n    nextPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const next = this.state.page + 1;\n        this.setState({nextLoading: true});\n        this.props.actions.getCustomEmojis(next, EMOJI_PER_PAGE, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({page: next, nextLoading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n\n            this.props.scrollToTop();\n        });\n    }\n\n    previousPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({page: this.state.page - 1, nextLoading: false});\n        this.props.scrollToTop();\n    }\n\n    onSearchChange = (e) => {\n        if (!e || !e.target) {\n            return;\n        }\n\n        const term = e.target.value || '';\n\n        clearTimeout(this.searchTimeout);\n\n        this.searchTimeout = setTimeout(async () => {\n            if (term.trim() === '') {\n                this.setState({searchEmojis: null, page: 0});\n                return;\n            }\n\n            this.setState({loading: true});\n\n            const {data} = await this.props.actions.searchCustomEmojis(term);\n\n            if (data) {\n                this.setState({searchEmojis: data.map((em) => em.id), loading: false});\n            } else {\n                this.setState({searchEmojis: [], loading: false});\n            }\n        }, EMOJI_SEARCH_DELAY_MILLISECONDS);\n    }\n\n    deleteFromSearch = (emojiId) => {\n        if (!this.state.searchEmojis) {\n            return;\n        }\n\n        const index = this.state.searchEmojis.indexOf(emojiId);\n\n        if (index < 0) {\n            return;\n        }\n\n        const newSearchEmojis = [...this.state.searchEmojis];\n        newSearchEmojis.splice(index, 1);\n        this.setState({searchEmojis: newSearchEmojis});\n    }\n\n    render() {\n        const searchEmojis = this.state.searchEmojis;\n        const emojis = [];\n        let nextButton;\n        let previousButton;\n\n        if (this.state.loading) {\n            emojis.push(\n                <tr\n                    key='loading'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <LoadingScreen key='loading'/>\n                    </td>\n                </tr>\n            );\n        } else if (this.props.emojiIds.length === 0 || (searchEmojis && searchEmojis.length === 0)) {\n            emojis.push(\n                <tr\n                    key='empty'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <FormattedMessage\n                            id='emoji_list.empty'\n                            defaultMessage='No custom emoji found'\n                        />\n                    </td>\n                </tr>\n            );\n        } else if (searchEmojis) {\n            searchEmojis.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_search_item' + emojiId}\n                        emojiId={emojiId}\n                        onDelete={this.deleteFromSearch}\n                    />\n                );\n            });\n        } else {\n            const pageStart = this.state.page * EMOJI_PER_PAGE;\n            const pageEnd = pageStart + EMOJI_PER_PAGE;\n            const emojisToDisplay = this.props.emojiIds.slice(pageStart, pageEnd);\n\n            emojisToDisplay.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_list_item' + emojiId}\n                        emojiId={emojiId}\n                    />\n                );\n            });\n\n            if (this.state.missingPages) {\n                const buttonContents = (\n                    <span>\n                        <FormattedMessage\n                            id='filtered_user_list.next'\n                            defaultMessage='Next'\n                        />\n                        <i\n                            className='fa fa-chevron-right margin-left'\n                            title={localizeMessage('generic_icons.next', 'Next Icon')}\n                        />\n                    </span>\n                );\n\n                nextButton = (\n                    <SaveButton\n                        btnClass='btn-link'\n                        extraClasses='pull-right'\n                        onClick={this.nextPage}\n                        saving={this.state.nextLoading}\n                        disabled={this.state.nextLoading}\n                        defaultMessage={buttonContents}\n                        savingMessage={buttonContents}\n                    />\n                );\n            }\n\n            if (this.state.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-link'\n                        onClick={this.previousPage}\n                    >\n                        <i\n                            className='fa fa-chevron-left margin-right'\n                            title={localizeMessage('generic_icons.previous', 'Previous Icon')}\n                        />\n                        <FormattedMessage\n                            id='filtered_user_list.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        return (\n            <div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <i\n                            className='fa fa-search'\n                            title={localizeMessage('generic_icons.search', 'Search Icon')}\n                        />\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={localizeMessage('emoji_list.search', 'Search Custom Emoji')}\n                            onChange={this.onSearchChange}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help'\n                            defaultMessage=\"Custom emoji are available to everyone on your server. Type ':' followed by two characters in a message box to bring up the emoji selection menu.\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help2'\n                            defaultMessage=\"Tip: If you add #, ##, or ### as the first character on a new line containing emoji, you can use larger sized emoji. To try it out, send a message such as: '# :smile:'.\"\n                        />\n                    </p>\n                </span>\n                <div className='backstage-list'>\n                    <table className='emoji-list__table'>\n                        <thead>\n                            <tr className='backstage-list__item emoji-list__table-header'>\n                                <th className='emoji-list__name'>\n                                    <FormattedMessage\n                                        id='emoji_list.name'\n                                        defaultMessage='Name'\n                                    />\n                                </th>\n                                <th className='emoji-list__image'>\n                                    <FormattedMessage\n                                        id='emoji_list.image'\n                                        defaultMessage='Image'\n                                    />\n                                </th>\n                                <th className='emoji-list__creator'>\n                                    <FormattedMessage\n                                        id='emoji_list.creator'\n                                        defaultMessage='Creator'\n                                    />\n                                </th>\n                                <th className='emoji-list_actions'>\n                                    <FormattedMessage\n                                        id='emoji_list.actions'\n                                        defaultMessage='Actions'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {emojis}\n                        </tbody>\n                    </table>\n                </div>\n                <div className='filter-controls padding-top x2'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {deleteCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {getDisplayNameByUser} from 'utils/utils.jsx';\n\nimport EmojiListItem from './emoji_list_item.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const emoji = state.entities.emojis.customEmoji[ownProps.emojiId];\n    const creator = getUser(state, emoji.creator_id);\n\n    return {\n        emoji,\n        creatorDisplayName: getDisplayNameByUser(creator),\n        creatorUsername: creator ? creator.username : '',\n        currentUserId: getCurrentUserId(state),\n        currentTeam: getCurrentTeam(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiListItem);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport {Client4} from 'mattermost-redux/client';\n\nimport DeleteEmoji from 'components/emoji/delete_emoji_modal.jsx';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nexport default class EmojiListItem extends React.Component {\n    static propTypes = {\n        emoji: PropTypes.object.isRequired,\n        currentUserId: PropTypes.string.isRequired,\n        creatorDisplayName: PropTypes.string.isRequired,\n        creatorUsername: PropTypes.string,\n        currentTeam: PropTypes.object,\n        onDelete: PropTypes.func,\n        actions: PropTypes.shape({\n            deleteCustomEmoji: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        emoji: {},\n        currentUserId: '',\n        currentTeam: {},\n        creatorDisplayName: '',\n    }\n\n    handleDelete = () => {\n        if (this.props.onDelete) {\n            this.props.onDelete(this.props.emoji.id);\n        }\n\n        this.props.actions.deleteCustomEmoji(this.props.emoji.id);\n    }\n\n    render() {\n        const emoji = this.props.emoji;\n        const creatorUsername = this.props.creatorUsername;\n        let creatorDisplayName = this.props.creatorDisplayName;\n\n        if (creatorUsername && creatorUsername !== creatorDisplayName) {\n            creatorDisplayName += ' (@' + creatorUsername + ')';\n        }\n\n        let deleteButton = null;\n        if (emoji.creator_id === this.props.currentUserId) {\n            deleteButton = (\n                <TeamPermissionGate\n                    teamId={this.props.currentTeam.id}\n                    permissions={[Permissions.MANAGE_EMOJIS]}\n                >\n                    <DeleteEmoji onDelete={this.handleDelete}/>\n                </TeamPermissionGate>\n            );\n        } else {\n            deleteButton = (\n                <TeamPermissionGate\n                    teamId={this.props.currentTeam.id}\n                    permissions={[Permissions.MANAGE_EMOJIS]}\n                >\n                    <TeamPermissionGate\n                        teamId={this.props.currentTeam.id}\n                        permissions={[Permissions.MANAGE_OTHERS_EMOJIS]}\n                    >\n                        <DeleteEmoji onDelete={this.handleDelete}/>\n                    </TeamPermissionGate>\n                </TeamPermissionGate>\n            );\n        }\n\n        return (\n            <tr className='backstage-list__item'>\n                <td className='emoji-list__name'>\n                    {':' + emoji.name + ':'}\n                </td>\n                <td className='emoji-list__image'>\n                    <span\n                        className='emoticon'\n                        style={{backgroundImage: 'url(' + Client4.getCustomEmojiImageUrl(emoji.id) + ')'}}\n                    />\n                </td>\n                <td className='emoji-list__creator'>\n                    {creatorDisplayName}\n                </td>\n                <td className='emoji-list-item_actions'>\n                    {deleteButton}\n                </td>\n            </tr>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class DeleteEmoji extends DeleteModalTrigger {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.title'\n                defaultMessage='Delete Custom Emoji'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <i\n                    className='fa fa-warning fa-margin--right'\n                    title={localizeMessage('generic_icons.warning', 'Warning Icon')}\n                />\n                <FormattedMessage\n                    id='emoji_list.delete.confirm.msg'\n                    defaultMessage='This action permanently deletes the custom emoji. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as EmojiActions from 'actions/emoji_actions.jsx';\nimport EmojiStore from 'stores/emoji_store.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AddEmoji extends React.Component {\n    static propTypes = {\n        team: PropTypes.object,\n        user: PropTypes.object,\n    };\n\n    static contextTypes = {\n        router: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.updateName = this.updateName.bind(this);\n        this.updateImage = this.updateImage.bind(this);\n\n        this.state = {\n            name: '',\n            image: null,\n            imageUrl: '',\n            saving: false,\n            error: null,\n        };\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            error: null,\n        });\n\n        const emoji = {\n            creator_id: this.props.user.id,\n            name: this.state.name.trim().toLowerCase(),\n        };\n\n        // trim surrounding colons if the user accidentally included them in the name\n        if (emoji.name.startsWith(':') && emoji.name.endsWith(':')) {\n            emoji.name = emoji.name.substring(1, emoji.name.length - 1);\n        }\n\n        if (!emoji.name) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameRequired'\n                        defaultMessage='A name is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        } else if (/[^a-z0-9_-]/.test(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameInvalid'\n                        defaultMessage=\"An emoji's name can only contain lowercase letters, numbers, and the symbols '-' and '_'.\"\n                    />\n                ),\n            });\n\n            return;\n        } else if (EmojiStore.hasSystemEmoji(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameTaken'\n                        defaultMessage='This name is already in use by a system emoji. Please choose another name.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.image) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.imageRequired'\n                        defaultMessage='An image is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        EmojiActions.addEmoji(\n            emoji,\n            this.state.image,\n            () => {\n                this.props.history.push('/' + this.props.team.name + '/emoji');\n            },\n            (err) => {\n                this.setState({\n                    saving: false,\n                    error: err.message,\n                });\n            }\n        );\n    }\n\n    updateName(e) {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateImage(e) {\n        if (e.target.files.length === 0) {\n            this.setState({\n                image: null,\n                imageUrl: '',\n            });\n\n            return;\n        }\n\n        const image = e.target.files[0];\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.setState({\n                image,\n                imageUrl: reader.result,\n            });\n        };\n        reader.readAsDataURL(image);\n    }\n\n    render() {\n        let filename = null;\n        if (this.state.image) {\n            filename = (\n                <span className='add-emoji__filename'>\n                    {this.state.image.name}\n                </span>\n            );\n        }\n\n        let preview = null;\n        if (this.state.imageUrl) {\n            preview = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='preview'\n                    >\n                        <FormattedMessage\n                            id='add_emoji.preview'\n                            defaultMessage='Preview'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8 add-emoji__preview'>\n                        <FormattedMessage\n                            id='add_emoji.preview.sentence'\n                            defaultMessage='This is a sentence with {image} in it.'\n                            values={{\n                                image: (\n                                    <span\n                                        className='emoticon'\n                                        style={{backgroundImage: 'url(' + this.state.imageUrl + ')'}}\n                                    />\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/emoji'}>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id='add_emoji.header'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.name'\n                                    defaultMessage='Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_emoji.name.help'\n                                        defaultMessage=\"Choose a name for your emoji made of up to 64 characters consisting of lowercase letters, numbers, and the symbols '-' and '_'.\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='image'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.image'\n                                    defaultMessage='Image'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div>\n                                    <div className='add-emoji__upload'>\n                                        <button className='btn btn-primary'>\n                                            <FormattedMessage\n                                                id='add_emoji.image.button'\n                                                defaultMessage='Select'\n                                            />\n                                        </button>\n                                        <input\n                                            type='file'\n                                            accept='.jpg,.png,.gif'\n                                            multiple={false}\n                                            onChange={this.updateImage}\n                                        />\n                                    </div>\n                                    {filename}\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_emoji.image.help'\n                                            defaultMessage='Choose the image for your emoji. The image can be a gif, png, or jpeg file with a max size of 64 KB and dimensions up to 128 by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {preview}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                error={this.state.error}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={'/' + this.props.team.name + '/emoji'}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.save'\n                                    defaultMessage='Save'\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getIncomingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InstalledIncomingWebhooks from './installed_incoming_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_WEBHOOKS});\n    const incomingHooks = getIncomingHooks(state);\n    const incomingWebhooks = Object.keys(incomingHooks).\n        map((key) => incomingHooks[key]).\n        filter((incomingWebhook) => incomingWebhook.team_id === teamId);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n\n    return {\n        incomingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableIncomingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getIncomingHooks: Actions.getIncomingHooks,\n            removeIncomingHook: Actions.removeIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledIncomingWebhooks);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledIncomingWebhook from 'components/integrations/installed_incoming_webhook.jsx';\n\nexport default class InstalledIncomingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        incomingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n\n        teamId: PropTypes.string,\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing incomingWebhook\n            */\n            removeIncomingHook: PropTypes.func,\n\n            /**\n            * The function to call for incomingWebhook List and for the status of api\n            */\n            getIncomingHooks: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.deleteIncomingWebhook = this.deleteIncomingWebhook.bind(this);\n        this.incomingWebhookCompare = this.incomingWebhookCompare.bind(this);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHooks(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteIncomingWebhook = (incomingWebhook) => {\n        this.props.actions.removeIncomingHook(incomingWebhook.id);\n    }\n\n    incomingWebhookCompare(a, b) {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_incoming_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        const displayNameB = b.display_name;\n\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    render() {\n        const incomingWebhooks = this.props.incomingWebhooks.sort(this.incomingWebhookCompare).map((incomingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === incomingWebhook.user_id;\n            const channel = this.props.channels[incomingWebhook.channel_id];\n            return (\n                <InstalledIncomingWebhook\n                    key={incomingWebhook.id}\n                    incomingWebhook={incomingWebhook}\n                    onDelete={this.deleteIncomingWebhook}\n                    creator={this.props.users[incomingWebhook.user_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.header'\n                        defaultMessage='Installed Incoming Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.add'\n                        defaultMessage='Add Incoming Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/incoming_webhooks/add'}\n                emptyText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.empty'\n                        defaultMessage='No incoming webhooks found'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.help'\n                        defaultMessage='Use incoming webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-incoming.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_incoming_webhooks.search', 'Search Incoming Webhooks')}\n                loading={this.state.loading}\n            >\n                {incomingWebhooks}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {getSiteURL} from 'utils/url.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport default class InstalledIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        incomingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhook based on filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete() {\n        this.props.onDelete(this.props.incomingWebhook);\n    }\n\n    static matchesFilter(incomingWebhook, channel, filter) {\n        if (!filter) {\n            return true;\n        }\n\n        if (incomingWebhook.display_name.toLowerCase().indexOf(filter) !== -1 ||\n            incomingWebhook.description.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n\n        if (incomingWebhook.channel_id) {\n            if (channel && channel.name.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    render() {\n        const incomingWebhook = this.props.incomingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!InstalledIncomingWebhook.matchesFilter(incomingWebhook, channel, filter)) {\n            return null;\n        }\n\n        let displayName;\n        if (incomingWebhook.display_name) {\n            displayName = incomingWebhook.display_name;\n        } else if (channel) {\n            displayName = channel.display_name;\n        } else {\n            displayName = (\n                <FormattedMessage\n                    id='installed_incoming_webhooks.unknown_channel'\n                    defaultMessage='A Private Webhook'\n                />\n            );\n        }\n\n        let description = null;\n        if (incomingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {incomingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks/edit?id=${incomingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId='installed_incoming_webhooks.delete.confirm'\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {displayName}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url'>\n                            <FormattedMessage\n                                id='installed_integrations.url'\n                                defaultMessage='URL: {url}'\n                                values={{\n                                    url: getSiteURL() + '/hooks/' + incomingWebhook.id,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: incomingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddIncomingWebhook from './add_incoming_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        createIncomingHookRequest: state.requests.integrations.createIncomingHook,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\n\nconst HEADER = {id: 'integrations.add', defaultMessage: 'Add'};\nconst FOOTER = {id: 'add_incoming_webhook.save', defaultMessage: 'Save'};\n\nexport default class AddIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The request state for createIncomingHook action. Contains status and error\n        */\n        createIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add a new incoming webhook\n            */\n            createIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addIncomingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createIncomingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=incoming_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createIncomingHookRequest.error) {\n            this.setState({serverError: this.props.createIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.addIncomingHook}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getIncomingHook, updateIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditIncomingWebhook from './edit_incoming_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n\n    return {\n        hookId,\n        hook: state.entities.integrations.incomingHooks[hookId],\n        updateIncomingHookRequest: state.requests.integrations.updateIncomingHook,\n        enableIncomingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateIncomingHook,\n            getIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_incoming_webhook.update', defaultMessage: 'Update'};\n\nexport default class EditIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The incoming webhook to edit\n        */\n        hook: PropTypes.object,\n\n        /**\n        * The id of the incoming webhook to edit\n        */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n        * The request state for updateIncomingHook action. Contains status and error\n        */\n        updateIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to update an incoming webhook\n            */\n            updateIncomingHook: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to get an incoming webhook\n            */\n            getIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHook(this.props.hookId);\n        }\n    }\n\n    editIncomingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        await this.submitHook();\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateIncomingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/incoming_webhooks`);\n            return;\n        }\n\n        if (this.props.updateIncomingHookRequest.error) {\n            this.setState({serverError: this.props.updateIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.editIncomingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InstalledOutgoingWebhook from './installed_outgoing_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_WEBHOOKS});\n    const outgoingHooks = getOutgoingHooks(state);\n    const outgoingWebhooks = Object.keys(outgoingHooks).\n        map((key) => outgoingHooks[key]).\n        filter((outgoingWebhook) => outgoingWebhook.team_id === teamId);\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n\n    return {\n        outgoingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableOutgoingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOutgoingHooks: Actions.getOutgoingHooks,\n            removeOutgoingHook: Actions.removeOutgoingHook,\n            regenOutgoingHookToken: Actions.regenOutgoingHookToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOutgoingWebhook from 'components/integrations/installed_outgoing_webhook.jsx';\n\nexport default class InstalledOutgoingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        outgoingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n        teamId: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing outgoingWebhook\n            */\n            removeOutgoingHook: PropTypes.func,\n\n            /**\n            * The function to call for outgoingWebhook List and for the status of api\n            */\n            getOutgoingHooks: PropTypes.func,\n\n            /**\n            * The function to call for regeneration of webhook token\n            */\n            regenOutgoingHookToken: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.outgoingWebhookCompare = this.outgoingWebhookCompare.bind(this);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHooks(\n                '',\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    regenOutgoingWebhookToken = (outgoingWebhook) => {\n        this.props.actions.regenOutgoingHookToken(outgoingWebhook.id);\n    }\n\n    removeOutgoingHook = (outgoingWebhook) => {\n        this.props.actions.removeOutgoingHook(outgoingWebhook.id);\n    }\n\n    outgoingWebhookCompare(a, b) {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        let displayNameB = b.display_name;\n        if (!displayNameB) {\n            const channelB = this.props.channels[b.channel_id];\n            if (channelB) {\n                displayNameB = channelB.display_name;\n            } else {\n                displayNameB = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    render() {\n        const outgoingWebhooks = this.props.outgoingWebhooks.sort(this.outgoingWebhookCompare).map((outgoingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === outgoingWebhook.creator_id;\n            const channel = this.props.channels[outgoingWebhook.channel_id];\n            return (\n                <InstalledOutgoingWebhook\n                    key={outgoingWebhook.id}\n                    outgoingWebhook={outgoingWebhook}\n                    onRegenToken={this.regenOutgoingWebhookToken}\n                    onDelete={this.removeOutgoingHook}\n                    creator={this.props.users[outgoingWebhook.creator_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.header'\n                        defaultMessage='Installed Outgoing Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.add'\n                        defaultMessage='Add Outgoing Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/outgoing_webhooks/add'}\n                emptyText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.empty'\n                        defaultMessage='No outgoing webhooks found'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.help'\n                        defaultMessage='Use outgoing webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-outgoing.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_outgoing_webhooks.search', 'Search Outgoing Webhooks')}\n                loading={this.state.loading}\n            >\n                {outgoingWebhooks}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport default class InstalledOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        outgoingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function used for webhook token regeneration\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhooks based in filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleRegenToken = this.handleRegenToken.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleRegenToken(e) {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.outgoingWebhook);\n    }\n\n    handleDelete() {\n        this.props.onDelete(this.props.outgoingWebhook);\n    }\n\n    makeDisplayName(outgoingWebhook, channel) {\n        if (outgoingWebhook.display_name) {\n            return outgoingWebhook.display_name;\n        } else if (channel) {\n            return channel.display_name;\n        }\n        return (\n            <FormattedMessage\n                id='installed_outgoing_webhooks.unknown_channel'\n                defaultMessage='A Private Webhook'\n            />\n        );\n    }\n\n    matchesFilter(outgoingWebhook, channel, filter) {\n        if (!filter) {\n            return true;\n        }\n\n        const {\n            display_name: displayName,\n            description,\n            trigger_words: triggerWords,\n        } = outgoingWebhook;\n\n        if (\n            (displayName && displayName.toLowerCase().indexOf(filter) !== -1) ||\n            (description && description.toLowerCase().indexOf(filter) !== -1)\n        ) {\n            return true;\n        }\n\n        if (triggerWords) {\n            for (const triggerWord of triggerWords) {\n                if (triggerWord.toLowerCase().indexOf(filter) !== -1) {\n                    return true;\n                }\n            }\n        }\n\n        if (channel && channel.name) {\n            if (channel.name.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    render() {\n        const outgoingWebhook = this.props.outgoingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        const triggerWordsFull = 0;\n        const triggerWordsStartsWith = 1;\n\n        if (outgoingWebhook && !this.matchesFilter(outgoingWebhook, channel, filter)) {\n            return null;\n        }\n\n        const displayName = this.makeDisplayName(outgoingWebhook, channel);\n\n        let description = null;\n        if (outgoingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {outgoingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let triggerWords = null;\n        if (outgoingWebhook.trigger_words && outgoingWebhook.trigger_words.length > 0) {\n            triggerWords = (\n                <div className='item-details__row'>\n                    <span className='item-details__trigger-words'>\n                        <FormattedMessage\n                            id='installed_integrations.triggerWords'\n                            defaultMessage='Trigger Words: {triggerWords}'\n                            values={{\n                                triggerWords: outgoingWebhook.trigger_words.join(', '),\n                            }}\n                        />\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: outgoingWebhook.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let triggerWhen;\n        if (outgoingWebhook.trigger_when === triggerWordsFull) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenFullWord'\n                    defaultMessage='First word matches a trigger word exactly'\n                />\n            );\n        } else if (outgoingWebhook.trigger_when === triggerWordsStartsWith) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenStartsWith'\n                    defaultMessage='First word starts with a trigger word'\n                />\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regen Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks/edit?id=${outgoingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId='installed_outgoing_webhooks.delete.confirm'\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {displayName}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__content_type'>\n                            <FormattedMessage\n                                id='installed_integrations.content_type'\n                                defaultMessage='Content-Type: {contentType}'\n                                values={{\n                                    contentType: outgoingWebhook.content_type || 'application/x-www-form-urlencoded',\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {triggerWords}\n                    <div className='item-details__row'>\n                        <span className='item-details__trigger-when'>\n                            <FormattedMessage\n                                id='installed_integrations.triggerWhen'\n                                defaultMessage='Trigger When: {triggerWhen}'\n                                values={{\n                                    triggerWhen,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: outgoingWebhook.token,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: outgoingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {urls}\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createOutgoingHook} from 'mattermost-redux/actions/integrations';\n\nimport AddOutgoingWebhook from './add_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        createOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\n\nconst HEADER = {id: 'integrations.add', defaultMessage: 'Add'};\nconst FOOTER = {id: 'add_outgoing_webhook.save', defaultMessage: 'Save'};\n\nexport default class AddOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The request state for createOutgoingHook action. Contains status and error\n         */\n        createOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to add a new outgoing webhook\n             */\n            createOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOutgoingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createOutgoingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=outgoing_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.createOutgoingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={''}\n                action={this.addOutgoingHook}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOutgoingHook, updateOutgoingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOutgoingWebhook from './edit_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n\n    return {\n        hookId,\n        hook: state.entities.integrations.outgoingHooks[hookId],\n        updateOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n        enableOutgoingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateOutgoingHook,\n            getOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_outgoing_webhook.update', defaultMessage: 'Update'};\n\nexport default class EditOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The outgoing webhook to edit\n         */\n        hook: PropTypes.object,\n\n        /**\n         * The id of the outgoing webhook to edit\n         */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n         * The request state for updateOutgoingHook action. Contains status and error\n         */\n        updateOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to update an outgoing webhook\n             */\n            updateOutgoingHook: PropTypes.func.isRequired,\n\n            /**\n             * The function to call to get an outgoing webhook\n             */\n            getOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHook(this.props.hookId);\n        }\n    }\n\n    editOutgoingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        const triggerWordsSame = (this.props.hook.trigger_words.length === hook.trigger_words.length) &&\n            this.props.hook.trigger_words.every((v, i) => v === hook.trigger_words[i]);\n\n        const callbackUrlsSame = (this.props.hook.callback_urls.length === hook.callback_urls.length) &&\n            this.props.hook.callback_urls.every((v, i) => v === hook.callback_urls[i]);\n\n        if (this.props.hook.content_type !== hook.content_type ||\n            !triggerWordsSame || !callbackUrlsSame) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitHook();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateOutgoingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/outgoing_webhooks`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (this.props.updateOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.updateOutgoingHookRequest.error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_outgoing_webhook.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_outgoing_webhook.confirm'\n                defaultMessage='Edit Outgoing Webhook'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_outgoing_webhook.question'\n                defaultMessage='Your changes may break the existing outgoing webhook. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitHook}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={this.renderExtra()}\n                action={this.editOutgoingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOAuthApps} from 'mattermost-redux/selectors/entities/integrations';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InstalledOAuthApps from './installed_oauth_apps.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n    const enableOnlyAdminIntegrations = config.EnableOnlyAdminIntegrations === 'true';\n\n    return {\n        canManageOauth: haveISystemPermission(state, {permission: Permissions.MANAGE_OAUTH}),\n        oauthApps: getOAuthApps(state),\n        regenOAuthAppSecretRequest: state.requests.integrations.updateOAuthApp,\n        enableOAuthServiceProvider,\n        enableOnlyAdminIntegrations,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthApps: Actions.getOAuthApps,\n            regenOAuthAppSecret: Actions.regenOAuthAppSecret,\n            deleteOAuthApp: Actions.deleteOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOAuthApps);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOAuthApp from '../installed_oauth_app.jsx';\n\nexport default class InstalledOAuthApps extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApps data\n        */\n        oauthApps: PropTypes.object,\n\n        /**\n        * Set if user can manage oath\n        */\n        canManageOauth: PropTypes.bool,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch OAuth apps\n            */\n            getOAuthApps: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Regenerate Secret link is clicked\n            */\n            regenOAuthAppSecret: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n\n        /**\n        * Whether or not integration configuration is restricted to admins.\n        */\n        enableOnlyAdminIntegrations: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApps().then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteOAuthApp = (app) => {\n        if (app && app.id) {\n            this.props.actions.deleteOAuthApp(app.id);\n        }\n    }\n\n    oauthAppCompare(a, b) {\n        let nameA = a.name;\n        if (!nameA) {\n            nameA = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        let nameB = b.name;\n        if (!nameB) {\n            nameB = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    render() {\n        const oauthApps = Object.values(this.props.oauthApps).sort(this.oauthAppCompare).map((app) => {\n            return (\n                <InstalledOAuthApp\n                    key={app.id}\n                    team={this.props.team}\n                    oauthApp={app}\n                    regenOAuthAppSecretRequest={this.props.regenOAuthAppSecretRequest}\n                    onRegenerateSecret={this.props.actions.regenOAuthAppSecret}\n                    onDelete={this.deleteOAuthApp}\n                />\n            );\n        });\n\n        const integrationsEnabled = this.props.enableOAuthServiceProvider && this.props.canManageOauth;\n        let props;\n        if (integrationsEnabled) {\n            props = {\n                addLink: '/' + this.props.team.name + '/integrations/oauth2-apps/add',\n                addText: localizeMessage('installed_oauth_apps.add', 'Add OAuth 2.0 Application'),\n            };\n        }\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_oauth_apps.header'\n                        defaultMessage='OAuth 2.0 Applications'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.help'\n                        defaultMessage='Create {oauthApplications} to securely integrate bots and third-party apps with Mattermost. Visit the {appDirectory} to find available self-hosted apps.'\n                        values={{\n                            oauthApplications: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://docs.mattermost.com/developer/oauth-2-0-applications.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.oauthApplications'\n                                        defaultMessage='OAuth 2.0 applications'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                emptyText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.empty'\n                        defaultMessage='No OAuth 2.0 Applications found'\n                    />\n                }\n                searchPlaceholder={localizeMessage('installed_oauth_apps.search', 'Search OAuth 2.0 Applications')}\n                loading={this.state.loading}\n                {...props}\n            >\n                {oauthApps}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport FormError from 'components/form_error.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nconst FAKE_SECRET = '***************';\n\nexport default class InstalledOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApp data\n        */\n        oauthApp: PropTypes.object.isRequired,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Secret link is clicked\n        */\n        onRegenerateSecret: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter OAuthApp\n        */\n        filter: PropTypes.string,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            clientSecret: FAKE_SECRET,\n        };\n    }\n\n    handleShowClientSecret = (e) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        this.setState({clientSecret: this.props.oauthApp.client_secret});\n    }\n\n    handleHideClientSecret = (e) => {\n        e.preventDefault();\n        this.setState({clientSecret: FAKE_SECRET});\n    }\n\n    handleRegenerate = (e) => {\n        e.preventDefault();\n        this.props.onRegenerateSecret(this.props.oauthApp.id).then(\n            () => {\n                const {error} = this.props.regenOAuthAppSecretRequest;\n                if (error) {\n                    this.setState({error: error.message});\n                } else {\n                    this.setState({error: null});\n                    this.handleShowClientSecret();\n                }\n            }\n        );\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.oauthApp);\n    }\n\n    matchesFilter = (oauthApp, filter) => {\n        if (!filter) {\n            return true;\n        }\n\n        return oauthApp.name.toLowerCase().indexOf(filter) !== -1;\n    }\n\n    render() {\n        const oauthApp = this.props.oauthApp;\n        let error;\n\n        if (this.state.error) {\n            error = (\n                <FormError\n                    error={this.state.error}\n                />\n            );\n        }\n\n        if (!this.matchesFilter(oauthApp, this.props.filter)) {\n            return null;\n        }\n\n        let name;\n        if (oauthApp.name) {\n            name = oauthApp.name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_integrations.unnamed_oauth_app'\n                    defaultMessage='Unnamed OAuth 2.0 Application'\n                />\n            );\n        }\n\n        let description;\n        if (oauthApp.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {oauthApp.description}\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: oauthApp.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let isTrusted;\n        if (oauthApp.is_trusted) {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.yes', 'Yes');\n        } else {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.no', 'No');\n        }\n\n        let showHide;\n        if (this.state.clientSecret === FAKE_SECRET) {\n            showHide = (\n                <button\n                    id='showSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleShowClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.showSecret'\n                        defaultMessage='Show Secret'\n                    />\n                </button>\n            );\n        } else {\n            showHide = (\n                <button\n                    id='hideSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleHideClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.hideSecret'\n                        defaultMessage='Hide Secret'\n                    />\n                </button>\n            );\n        }\n\n        const regen = (\n            <button\n                id='regenerateSecretButton'\n                className='style--none color--link'\n                onClick={this.handleRegenerate}\n            >\n                <FormattedMessage\n                    id='installed_integrations.regenSecret'\n                    defaultMessage='Regenerate Secret'\n                />\n            </button>\n        );\n\n        let icon;\n        if (oauthApp.icon_url) {\n            icon = (\n                <div className='integration__icon integration-list__icon'>\n                    <img src={oauthApp.icon_url}/>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                {icon}\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {name}\n                        </span>\n                    </div>\n                    {error}\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url'>\n                            <FormattedHTMLMessage\n                                id='installed_oauth_apps.is_trusted'\n                                defaultMessage='Is Trusted: <strong>{isTrusted}</strong>'\n                                values={{\n                                    isTrusted,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedHTMLMessage\n                                id='installed_integrations.client_id'\n                                defaultMessage='Client ID: <strong>{clientId}</strong>'\n                                values={{\n                                    clientId: oauthApp.id,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedHTMLMessage\n                                id='installed_integrations.client_secret'\n                                defaultMessage='Client Secret: <strong>{clientSecret}</strong>'\n                                values={{\n                                    clientSecret: this.state.clientSecret,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {urls}\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: Utils.getDisplayNameByUserId(oauthApp.creator_id),\n                                    createAt: oauthApp.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                <div className='item-actions'>\n                    {showHide}\n                    {' - '}\n                    {regen}\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps/edit?id=${oauthApp.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId='installed_oauth_apps.delete.confirm'\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addOAuthApp} from 'mattermost-redux/actions/integrations';\n\nimport AddOAuthApp from './add_oauth_app.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        addOAuthAppRequest: state.requests.integrations.addOAuthApp,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: 'add_oauth_app.header', defaultMessage: 'Add'};\nconst FOOTER = {id: 'installed_oauth_apps.save', defaultMessage: 'Save'};\n\nexport default class AddOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The request state for addOAuthApp action. Contains status and error\n        */\n        addOAuthAppRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new OAuthApp\n            */\n            addOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOAuthApp = async (app) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.addOAuthApp(app);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=oauth2-apps&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.addOAuthAppRequest.error) {\n            this.setState({serverError: this.props.addOAuthAppRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={''}\n                action={this.addOAuthApp}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOAuthApp, editOAuthApp} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOAuthApp from './edit_oauth_app.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const oauthAppId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        oauthAppId,\n        oauthApp: state.entities.integrations.oauthApps[oauthAppId],\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthApp,\n            editOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_incoming_webhook.update', defaultMessage: 'Update'};\n\nexport default class EditOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the OAuthApp to edit\n        */\n        oauthAppId: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp data\n        */\n        oauthApp: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to get OAuthApp\n            */\n            getOAuthApp: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit OAuthApp\n            */\n            editOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApp(this.props.oauthAppId);\n        }\n    }\n\n    editOAuthApp = async (app) => {\n        this.newApp = app;\n\n        if (this.props.oauthApp.id) {\n            app.id = this.props.oauthApp.id;\n        }\n\n        if (this.props.oauthApp.token) {\n            app.token = this.props.oauthApp.token;\n        }\n\n        const callbackUrlsSame = (this.props.oauthApp.callback_urls.length === app.callback_urls.length) &&\n            this.props.oauthApp.callback_urls.every((v, i) => v === app.callback_urls[i]);\n\n        if (callbackUrlsSame === false) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitOAuthApp();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitOAuthApp = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editOAuthApp(this.newApp);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/oauth2-apps`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_oauth_app.confirm'\n                defaultMessage='Edit OAuth 2.0 application'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_oauth_app.question'\n                defaultMessage='Your changes may break the existing OAuth 2.0 application. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitOAuthApp}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.oauthApp) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={this.renderExtra()}\n                action={this.editOAuthApp}\n                serverError={this.state.serverError}\n                initialApp={this.props.oauthApp}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport CommandsContainer from './commands_container.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commands: Object.values(getCommands(state)),\n        users: getUsers(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomTeamCommands,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandsContainer);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport InstalledCommands from 'components/integrations/installed_commands';\nimport AddCommand from 'components/integrations/add_command';\nimport EditCommand from 'components/integrations/edit_command';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nconst CommandRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class CommandsContainer extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data needed to pass into child components\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user data needed to pass into child components\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Object from react-router\n        */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            getCustomTeamCommands: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    render() {\n        const extraProps = {\n            loading: this.state.loading,\n            commands: this.props.commands || [],\n            users: this.props.users,\n            team: this.props.team,\n            user: this.props.user,\n        };\n        return (\n            <div>\n                <Switch>\n                    <Route\n                        exact={true}\n                        path={`${this.props.match.url}/`}\n                        render={() => (<Redirect to={`${this.props.match.url}/installed`}/>)}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/installed`}\n                        component={InstalledCommands}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/add`}\n                        component={AddCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/edit`}\n                        component={EditCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/confirm`}\n                        component={ConfirmIntegration}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {deleteCommand, regenCommandToken} from 'mattermost-redux/actions/integrations';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport InstalledCommands from './installed_commands.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const canManageOthersSlashCommands = haveITeamPermission(state, {team: ownProps.team.id, permission: Permissions.MANAGE_OTHERS_SLASH_COMMANDS});\n\n    return {\n        canManageOthersSlashCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            regenCommandToken,\n            deleteCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledCommands);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledCommand from '../installed_command.jsx';\n\nexport default class InstalledCommands extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team object\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user object\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Set whether to show the loading... animation or not\n        */\n        loading: PropTypes.bool,\n\n        /**\n        * Set to allow changes to installed slash commands\n        */\n        canManageOthersSlashCommands: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call when Regenerate Token link is clicked\n            */\n            regenCommandToken: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    regenCommandToken = (command) => {\n        this.props.actions.regenCommandToken(command.id);\n    }\n\n    deleteCommand = (command) => {\n        this.props.actions.deleteCommand(command.id);\n    }\n\n    commandCompare(a, b) {\n        let nameA = a.display_name;\n        if (!nameA) {\n            nameA = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        let nameB = b.display_name;\n        if (!nameB) {\n            nameB = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    render() {\n        const commands = this.props.commands.\n            filter((command) => command.team_id === this.props.team.id).\n            sort(this.commandCompare).map((command) => {\n                const canChange = this.props.canManageOthersSlashCommands || this.props.user.id === command.creator_id;\n\n                return (\n                    <InstalledCommand\n                        key={command.id}\n                        team={this.props.team}\n                        command={command}\n                        onRegenToken={this.regenCommandToken}\n                        onDelete={this.deleteCommand}\n                        creator={this.props.users[command.creator_id] || {}}\n                        canChange={canChange}\n                    />\n                );\n            });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_commands.header'\n                        defaultMessage='Installed Slash Commands'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_commands.add'\n                        defaultMessage='Add Slash Command'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/commands/add'}\n                emptyText={\n                    <FormattedMessage\n                        id='installed_commands.empty'\n                        defaultMessage='No slash commands found'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_commands.help'\n                        defaultMessage='Use slash commands to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/slash-commands.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_commands.search', 'Search Slash Commands')}\n                loading={this.props.loading}\n            >\n                {commands}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport default class InstalledCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * Installed slash command to display\n        */\n        command: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Token link is clicked\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter command, comes from BackstageList\n        */\n        filter: PropTypes.string,\n\n        /**\n        * The creator user data\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        * Set to show edit link\n        */\n        canChange: PropTypes.bool.isRequired,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.command);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.command);\n    }\n\n    matchesFilter(command, filter) {\n        if (!filter) {\n            return true;\n        }\n\n        return command.display_name.toLowerCase().indexOf(filter) !== -1 ||\n            command.description.toLowerCase().indexOf(filter) !== -1 ||\n            command.trigger.toLowerCase().indexOf(filter) !== -1;\n    }\n\n    render() {\n        const command = this.props.command;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!this.matchesFilter(command, filter)) {\n            return null;\n        }\n\n        let name;\n\n        if (command.display_name) {\n            name = command.display_name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_commands.unnamed_command'\n                    defaultMessage='Unnamed Slash Command'\n                />\n            );\n        }\n\n        let description = null;\n        if (command.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {command.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let trigger = '- /' + command.trigger;\n        if (command.auto_complete && command.auto_complete_hint) {\n            trigger += ' ' + command.auto_complete_hint;\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regenerate Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/commands/edit?id=${command.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId='installed_commands.delete.confirm'\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {name}\n                        </span>\n                        <span className='item-details__trigger'>\n                            {trigger}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: command.token,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: command.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addCommand} from 'mattermost-redux/actions/integrations';\n\nimport AddCommand from './add_command.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: 'integrations.add', defaultMessage: 'Add'};\nconst FOOTER = {id: 'add_command.save', defaultMessage: 'Save'};\n\nexport default class AddCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new command\n            */\n            addCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addCommand = async (command) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.addCommand(command);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands/confirm?type=commands&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={''}\n                action={this.addCommand}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {editCommand, getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditCommand from './edit_command.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const commandId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commandId,\n        commands: getCommands(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomTeamCommands,\n            editCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'edit_command.save', defaultMessage: 'Update'};\n\nexport default class EditCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the command to edit\n        */\n        commandId: PropTypes.string.isRequired,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            getCustomTeamCommands: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit command\n            */\n            editCommand: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            originalCommand: null,\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => {\n                    this.setState({\n                        originalCommand: Object.values(this.props.commands).filter((command) => command.id === this.props.commandId)[0],\n                    });\n                }\n            );\n        }\n    }\n\n    editCommand = async (command) => {\n        this.newCommand = command;\n\n        if (this.state.originalCommand.id) {\n            command.id = this.state.originalCommand.id;\n        }\n\n        if (this.state.originalCommand.url !== this.newCommand.url ||\n            this.state.originalCommand.trigger !== this.newCommand.trigger ||\n            this.state.originalCommand.method !== this.newCommand.method) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitCommand();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitCommand = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editCommand(this.newCommand);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_command.confirm'\n                defaultMessage='Edit Slash Command'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_command.question'\n                defaultMessage='Your changes may break the existing slash command. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitCommand}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.state.originalCommand) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={this.renderExtra()}\n                action={this.editCommand}\n                serverError={this.state.serverError}\n                initialCommand={this.state.originalCommand}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\nimport Constants from 'utils/constants.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport {getSiteURL} from 'utils/url.jsx';\n\nexport default class ConfirmIntegration extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            location: PropTypes.object,\n            commands: PropTypes.object,\n            oauthApps: PropTypes.object,\n            incomingHooks: PropTypes.object,\n            outgoingHooks: PropTypes.object,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (new URLSearchParams(this.props.location.search)).get('type'),\n            id: (new URLSearchParams(this.props.location.search)).get('id'),\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('keypress', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\n        }\n    }\n\n    render() {\n        let headerText = null;\n        let helpText = null;\n        let tokenText = null;\n\n        if (this.state.type === Constants.Integrations.COMMAND) {\n            const command = this.props.commands[this.state.id];\n            if (command) {\n                headerText = (\n                    <FormattedMessage\n                        id={'installed_commands.header'}\n                        defaultMessage='Slash Commands'\n                    />\n                );\n                helpText = (\n                    <p>\n                        <FormattedHTMLMessage\n                            id='add_command.doneHelp'\n                            defaultMessage='Your slash command has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see <a href=\"https://docs.mattermost.com/developer/slash-commands.html\">documentation</a> for further details).'\n                        />\n                    </p>\n                );\n                tokenText = (\n                    <p className='word-break--all'>\n                        <FormattedHTMLMessage\n                            id='add_command.token'\n                            defaultMessage='<b>Token</b>: {token}'\n                            values={{\n                                token: command.token,\n                            }}\n                        />\n                    </p>\n                );\n            }\n        } else if (this.state.type === Constants.Integrations.INCOMING_WEBHOOK) {\n            const incomingHook = this.props.incomingHooks[this.state.id];\n            if (incomingHook) {\n                headerText = (\n                    <FormattedMessage\n                        id={'installed_incoming_webhooks.header'}\n                        defaultMessage='Incoming Webhooks'\n                    />\n                );\n                helpText = (\n                    <p>\n                        <FormattedHTMLMessage\n                            id='add_incoming_webhook.doneHelp'\n                            defaultMessage='Your incoming webhook has been set up. Please send data to the following URL (see <a href=\\\"https://docs.mattermost.com/developer/webhooks-incoming.html\\\">documentation</a> for further details).'\n                        />\n                    </p>\n                );\n                tokenText = (\n                    <p className='word-break--all'>\n                        <FormattedHTMLMessage\n                            id='add_incoming_webhook.url'\n                            defaultMessage='<b>URL</b>: {url}'\n                            values={{\n                                url: getSiteURL() + '/hooks/' + incomingHook.id,\n                            }}\n                        />\n                    </p>\n                );\n            }\n        } else if (this.state.type === Constants.Integrations.OUTGOING_WEBHOOK) {\n            const outgoingHook = this.props.outgoingHooks[this.state.id];\n            if (outgoingHook) {\n                headerText = (\n                    <FormattedMessage\n                        id={'installed_outgoing_webhooks.header'}\n                        defaultMessage='Outgoing Webhooks'\n                    />\n                );\n                helpText = (\n                    <p>\n                        <FormattedHTMLMessage\n                            id='add_outgoing_webhook.doneHelp'\n                            defaultMessage='Your outgoing webhook has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see <a href=\\\"https://docs.mattermost.com/developer/webhooks-outgoing.html\\\">documentation</a> for further details).'\n                        />\n                    </p>\n                );\n                tokenText = (\n                    <p className='word-break--all'>\n                        <FormattedHTMLMessage\n                            id='add_outgoing_webhook.token'\n                            defaultMessage='<b>Token</b>: {token}'\n                            values={{\n                                token: outgoingHook.token,\n                            }}\n                        />\n                    </p>\n                );\n            }\n        } else if (this.state.type === Constants.Integrations.OAUTH_APP) {\n            const oauthApp = this.props.oauthApps[this.state.id];\n            if (oauthApp) {\n                headerText = (\n                    <FormattedMessage\n                        id={'installed_oauth_apps.header'}\n                        defaultMessage='OAuth 2.0 Applications'\n                    />\n                );\n\n                helpText = [];\n                helpText.push(\n                    <p key='add_oauth_app.doneHelp'>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.doneHelp'\n                            defaultMessage='Your OAuth 2.0 application has been set up. Please use the following Client ID and Client Secret when requesting authorization for your application (see <a href=\"https://docs.mattermost.com/developer/oauth-2-0-applications.html\">documentation</a> for further details).'\n                        />\n                    </p>\n                );\n                helpText.push(\n                    <p key='add_oauth_app.clientId'>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.clientId'\n                            defaultMessage='<b>Client ID:</b> {id}'\n                            values={{\n                                id: oauthApp.id,\n                            }}\n                        /> <br/>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.clientSecret'\n                            defaultMessage='<b>Client Secret:</b> {secret}'\n                            values={{\n                                secret: oauthApp.client_secret,\n                            }}\n                        />\n                    </p>\n                );\n\n                helpText.push(\n                    <p key='add_oauth_app.doneUrlHelp'>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.doneUrlHelp'\n                            defaultMessage='The following are your authorized redirect URL(s).'\n                        />\n                    </p>\n                );\n\n                tokenText = (\n                    <p className='word-break--all'>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.url'\n                            defaultMessage='<b>URL(s)</b>: {url}'\n                            values={{\n                                url: oauthApp.callback_urls,\n                            }}\n                        />\n                    </p>\n                );\n            }\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/' + this.state.type}>\n                        {headerText}\n                    </Link>\n                    <FormattedMessage\n                        id='integrations.add'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form backstage-form__confirmation'>\n                    <h4 className='backstage-form__title'>\n                        <FormattedMessage\n                            id='integrations.successful'\n                            defaultMessage='Setup Successful'\n                        />\n                    </h4>\n                    {helpText}\n                    {tokenText}\n                    <div className='backstage-form__footer'>\n                        <Link\n                            className='btn btn-primary'\n                            type='submit'\n                            to={'/' + this.props.team.name + '/integrations/' + this.state.type}\n                        >\n                            <FormattedMessage\n                                id='integrations.done'\n                                defaultMessage='Done'\n                            />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport BackstageCategory from './backstage_category.jsx';\nimport BackstageSection from './backstage_section.jsx';\n\nexport default class BackstageSidebar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            user: PropTypes.object.isRequired,\n            enableCustomEmoji: PropTypes.bool.isRequired,\n            enableIncomingWebhooks: PropTypes.bool.isRequired,\n            enableOutgoingWebhooks: PropTypes.bool.isRequired,\n            enableCommands: PropTypes.bool.isRequired,\n            enableOAuthServiceProvider: PropTypes.bool.isRequired,\n            canCreateCustomEmoji: PropTypes.bool.isRequired,\n        };\n    }\n\n    renderCustomEmoji() {\n        if (!this.props.enableCustomEmoji || !this.props.canCreateCustomEmoji) {\n            return null;\n        }\n\n        return (\n            <BackstageCategory\n                name='emoji'\n                parentLink={'/' + this.props.team.name}\n                icon='fa-smile-o'\n                title={\n                    <FormattedMessage\n                        id='backstage_sidebar.emoji'\n                        defaultMessage='Custom Emoji'\n                    />\n                }\n            />\n        );\n    }\n\n    renderIntegrations() {\n        if (!this.props.enableIncomingWebhooks &&\n            !this.props.enableOutgoingWebhooks &&\n            !this.props.enableCommands &&\n            !this.props.enableOAuthServiceProvider) {\n            return null;\n        }\n\n        let incomingWebhooks = null;\n        if (this.props.enableIncomingWebhooks) {\n            incomingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='incoming_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.incoming_webhooks'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        )}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let outgoingWebhooks = null;\n        if (this.props.enableOutgoingWebhooks) {\n            outgoingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='outgoing_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.outgoing_webhooks'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        )}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let commands = null;\n        if (this.props.enableCommands) {\n            commands = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='commands'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.commands'\n                                defaultMessage='Slash Commands'\n                            />\n                        )}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let oauthApps = null;\n        if (this.props.enableOAuthServiceProvider) {\n            oauthApps = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_OAUTH]}>\n                    <BackstageSection\n                        name='oauth2-apps'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.oauthApps'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        return (\n            <TeamPermissionGate\n                permissions={[Permissions.MANAGE_WEBHOOKS, Permissions.MANAGE_SLASH_COMMANDS, Permissions.MANAGE_OAUTH]}\n                teamId={this.props.team.id}\n            >\n                <BackstageCategory\n                    name='integrations'\n                    icon='fa-link'\n                    parentLink={'/' + this.props.team.name}\n                    title={\n                        <FormattedMessage\n                            id='backstage_sidebar.integrations'\n                            defaultMessage='Integrations'\n                        />\n                    }\n                >\n                    {incomingWebhooks}\n                    {outgoingWebhooks}\n                    {commands}\n                    {oauthApps}\n                </BackstageCategory>\n            </TeamPermissionGate>\n        );\n    }\n\n    render() {\n        return (\n            <div className='backstage-sidebar'>\n                <ul>\n                    {this.renderCustomEmoji()}\n                    {this.renderIntegrations()}\n                </ul>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, NavLink} from 'react-router-dom';\n\nexport default class BackstageCategory extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            parentLink: PropTypes.string,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    render() {\n        const {name, title, icon, parentLink, children} = this.props;\n\n        const link = parentLink + '/' + name;\n\n        return (\n            <li className='backstage-sidebar__category'>\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title--active'\n                >\n                    <i className={'fa ' + icon}/>\n                    <span className='category-title__text'>\n                        {title}\n                    </span>\n                </NavLink>\n                <Route\n                    path={link}\n                    render={() => (\n                        <ul className='sections'>\n                            {\n                                React.Children.map(children, (child) => {\n                                    if (!child) {\n                                        return child;\n                                    }\n\n                                    return React.cloneElement(child, {\n                                        parentLink: link,\n                                    });\n                                })\n                            }\n                        </ul>\n                    )}\n                />\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class BackstageSection extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const {title, subsection, children} = this.props;\n\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (children.length > 0) {\n            clonedChildren = (\n                <ul className='subsections'>\n                    {\n                        React.Children.map(children, (child) => {\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'section';\n        if (subsection) {\n            className = 'subsection';\n        }\n\n        return (\n            <li className={className}>\n                <NavLink\n                    className={`${className}-title`}\n                    activeClassName={`${className}-title--active`}\n                    to={link}\n                >\n                    <span className={`${className}-title__text`}>\n                        {title}\n                    </span>\n                </NavLink>\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {Constants} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackstageNavbar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            siteName: PropTypes.string,\n        };\n    }\n\n    render() {\n        if (!this.props.team) {\n            return null;\n        }\n\n        return (\n            <div className='backstage-navbar'>\n                <Link\n                    className='backstage-navbar__back'\n                    to={`/${this.props.team.name}/channels/${Constants.DEFAULT_CHANNEL}`}\n                >\n                    <i\n                        className='fa fa-angle-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <span>\n                        <FormattedMessage\n                            id='backstage_navbar.backToMattermost'\n                            defaultMessage='Back to {siteName}'\n                            values={{\n                                siteName: this.props.siteName,\n                            }}\n                        />\n                    </span>\n                </Link>\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}